{"version":3,"sources":["webpack:///./src/$_lazy_route_resource lazy namespace object","webpack:///./src/app/admin/admin-dashboard.component.html","webpack:///./src/app/admin/admin-dashboard.component.ts","webpack:///./src/app/admin/admin-routing.module.ts","webpack:///./src/app/admin/admin.component.css","webpack:///./src/app/admin/admin.component.html","webpack:///./src/app/admin/admin.component.ts","webpack:///./src/app/admin/admin.module.ts","webpack:///./src/app/admin/manage-palliatives.component.html","webpack:///./src/app/admin/manage-palliatives.component.ts","webpack:///./src/app/admin/manage-users.component.html","webpack:///./src/app/admin/manage-users.component.ts","webpack:///./src/app/animations.ts","webpack:///./src/app/app-routing.module.ts","webpack:///./src/app/app.component.css","webpack:///./src/app/app.component.html","webpack:///./src/app/app.component.ts","webpack:///./src/app/app.module.ts","webpack:///./src/app/auth.service.ts","webpack:///./src/app/auth/auth.component.css","webpack:///./src/app/auth/auth.component.html","webpack:///./src/app/auth/auth.component.ts","webpack:///./src/app/dustdb.service.ts","webpack:///./src/app/help/help.component.css","webpack:///./src/app/help/help.component.html","webpack:///./src/app/help/help.component.ts","webpack:///./src/app/home/home.component.css","webpack:///./src/app/home/home.component.html","webpack:///./src/app/home/home.component.ts","webpack:///./src/app/login/login.component.css","webpack:///./src/app/login/login.component.html","webpack:///./src/app/login/login.component.ts","webpack:///./src/app/logout/logout.component.css","webpack:///./src/app/logout/logout.component.html","webpack:///./src/app/logout/logout.component.ts","webpack:///./src/app/messages/message.service.ts","webpack:///./src/app/messages/messages.component.css","webpack:///./src/app/messages/messages.component.html","webpack:///./src/app/messages/messages.component.ts","webpack:///./src/app/not-found.component.ts","webpack:///./src/app/palliative-area/palliative-detail/palliative-detail.component.css","webpack:///./src/app/palliative-area/palliative-detail/palliative-detail.component.html","webpack:///./src/app/palliative-area/palliative-detail/palliative-detail.component.ts","webpack:///./src/app/palliative-area/palliative-list/palliative-list.component.css","webpack:///./src/app/palliative-area/palliative-list/palliative-list.component.html","webpack:///./src/app/palliative-area/palliative-list/palliative-list.component.ts","webpack:///./src/app/palliative-area/palliative-search/palliative-search.component.css","webpack:///./src/app/palliative-area/palliative-search/palliative-search.component.html","webpack:///./src/app/palliative-area/palliative-search/palliative-search.component.ts","webpack:///./src/app/palliative-area/palliative.service.ts","webpack:///./src/app/palliative-area/palliative.ts","webpack:///./src/app/palliative-area/palliatives-routing.component.ts","webpack:///./src/app/serviceUrls.ts","webpack:///./src/app/user-area/user-detail/user-detail.component.css","webpack:///./src/app/user-area/user-detail/user-detail.component.html","webpack:///./src/app/user-area/user-detail/user-detail.component.ts","webpack:///./src/app/user-area/user-list/user-list.component.css","webpack:///./src/app/user-area/user-list/user-list.component.html","webpack:///./src/app/user-area/user-list/user-list.component.ts","webpack:///./src/app/user-area/user-search/user-search.component.css","webpack:///./src/app/user-area/user-search/user-search.component.html","webpack:///./src/app/user-area/user-search/user-search.component.ts","webpack:///./src/app/user-area/user.service.ts","webpack:///./src/app/user-area/user.ts","webpack:///./src/app/user-area/users-routing.module.ts","webpack:///./src/environments/environment.ts","webpack:///./src/main.ts"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error('Cannot find module \"' + req + '\".');\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./src/$$_lazy_route_resource lazy recursive\";","module.exports = \"<!-- Admin dashboard...\\r\\n\\r\\n<button (click)=\\\"initializeDB()\\\">initialize database</button> -->\"","import { Component } from '@angular/core';\r\nimport { Router, ActivatedRoute } from '@angular/router';\r\n\r\nimport { DustDBService } from '../dustdb.service';\r\n\r\n@Component({\r\n    selector: 'app-admin-dashboard',\r\n    templateUrl: 'admin-dashboard.component.html',\r\n    styleUrls: [ 'admin.component.css' ]\r\n})\r\nexport class AdminDashboardComponent {\r\n    constructor(\r\n        private dustdbService: DustDBService,\r\n        private router: Router,\r\n        private route: ActivatedRoute\r\n    ) { }\r\n\r\n    initializeDB() {\r\n        this.dustdbService.initializeDB();\r\n    }\r\n}\r\n","import { NgModule } from '@angular/core';\r\nimport { RouterModule, Routes, Router } from '@angular/router';\r\n\r\nimport { AuthGuardService } from '../auth-guard.service';\r\n\r\nimport { AdminComponent } from './admin.component';\r\nimport { ManageUsersComponent } from './manage-users.component';\r\nimport { ManagePalliativesComponent } from './manage-palliatives.component';\r\nimport { AdminDashboardComponent } from './admin-dashboard.component';\r\n\r\nconst adminRoutes: Routes = [\r\n    {\r\n        path: 'admin', component: AdminComponent,\r\n        // canActivate: [ AuthGuardService ],\r\n        children: [\r\n            {\r\n                path: '',\r\n                // canActivateChild: [ AuthGuardService ],\r\n                children: [\r\n                    { path: 'dashboard', component: AdminDashboardComponent },\r\n                    { path: 'users', component: ManageUsersComponent },\r\n                    { path: 'palliatives', component: ManagePalliativesComponent },\r\n                ]\r\n            }\r\n        ]\r\n    }\r\n];\r\n\r\n@NgModule({\r\n    imports: [\r\n        RouterModule.forChild(adminRoutes)\r\n    ],\r\n    exports: [\r\n        RouterModule\r\n    ]\r\n})\r\nexport class AdminRoutingModule { }\r\n","module.exports = \"\"","module.exports = \"\\r\\n\\r\\n<nav>\\r\\n  <h1>Administration Area</h1>\\r\\n  <!-- <a routerLink=\\\"./dashboard\\\" routerLinkActive=\\\"active\\\"\\r\\n    [routerLinkActiveOptions]=\\\"{ exact: true }\\\">Dashboard</a> -->\\r\\n  <a routerLink=\\\"./palliatives\\\" routerLinkActive=\\\"active\\\">Manage Palliatives</a>\\r\\n  <a routerLink=\\\"./users\\\" routerLinkActive=\\\"active\\\">Manage Users</a>\\r\\n</nav>\\r\\n\\r\\n<router-outlet></router-outlet>\"","import { Component, OnInit } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-admin',\r\n  templateUrl: './admin.component.html',\r\n  styleUrls: ['./admin.component.css']\r\n})\r\nexport class AdminComponent implements OnInit {\r\n\r\n  constructor() { }\r\n\r\n  ngOnInit() {\r\n  }\r\n\r\n}\r\n","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { HttpClientModule } from '@angular/common/http';\r\n\r\nimport { AdminComponent } from './admin.component';\r\nimport { AdminDashboardComponent } from './admin-dashboard.component';\r\nimport { ManageUsersComponent } from './manage-users.component';\r\nimport { ManagePalliativesComponent } from './manage-palliatives.component';\r\n\r\nimport { AdminRoutingModule } from './admin-routing.module';\r\n\r\n@NgModule({\r\n  imports: [\r\n    CommonModule,\r\n    AdminRoutingModule,\r\n    HttpClientModule\r\n  ],\r\n  declarations: [\r\n    AdminComponent,\r\n    AdminDashboardComponent,\r\n    ManageUsersComponent,\r\n    ManagePalliativesComponent\r\n  ]\r\n})\r\nexport class AdminModule { }\r\n","module.exports = \"<h2>Manage Palliatives</h2>\\r\\n\\r\\n<div *ngIf=\\\"!palliatives$\\\">Loading...</div>\\r\\n\\r\\n<div *ngIf=\\\"palliatives$ | async as palliatives\\\">\\r\\n\\r\\n<!-- <app-palliative-list></app-palliative-list> -->\\r\\n\\r\\n<ul class=\\\"items\\\">\\r\\n    <li *ngFor=\\\"let palliative of palliatives\\\">\\r\\n        <a routerLink=\\\"/palliatives/detail/{{palliative.id}}\\\">\\r\\n        <span class=\\\"badge\\\">{{palliative.id}} | {{palliative.testid}} | </span>{{palliative.shortname}}</a>\\r\\n        <button class=\\\"delete\\\" title=\\\"delete palliative\\\" (click)=\\\"delete(palliative)\\\">x</button>\\r\\n    </li>\\r\\n</ul>\\r\\n</div>\\r\\n\\r\\n\\r\\n<button (click)=\\\"gotoDashboard()\\\">Back to dashboard</button>\\r\\n\"","import { Component, OnInit } from '@angular/core';\r\nimport { Router, ActivatedRoute, ParamMap } from '@angular/router';\r\nimport { Observable } from 'rxjs';\r\nimport { switchMap } from 'rxjs/operators';\r\n\r\nimport { UserService } from '../user-area/user.service';\r\nimport { User } from '../user-area/user';\r\nimport { PalliativeService } from '../palliative-area/palliative.service';\r\nimport { Palliative } from '../palliative-area/palliative';\r\n\r\n@Component({\r\n    selector: 'app-admin-manage-palliatives',\r\n    templateUrl: 'manage-palliatives.component.html',\r\n    styleUrls: [ 'admin.component.css' ]\r\n})\r\nexport class ManagePalliativesComponent implements OnInit {\r\n    palliatives$: Observable<Palliative[]>;\r\n    selectedId = 0;\r\n\r\n    constructor(\r\n        private palliativeService: PalliativeService,\r\n        private userService: UserService,\r\n        private route: ActivatedRoute,\r\n        private router: Router\r\n    ) { }\r\n\r\n    ngOnInit() {\r\n        this.palliatives$ = this.palliativeService.getPalliatives();\r\n        this.palliatives$ = this.route.paramMap.pipe(\r\n            switchMap((params: ParamMap) => {\r\n                this.selectedId = +params.get('id');\r\n                return this.palliativeService.getPalliatives();\r\n            })\r\n        );\r\n    }\r\n\r\n    gotoDashboard() {\r\n        this.router.navigate([ './' ]);\r\n    }\r\n}\r\n","module.exports = \"<h2>Manage Users</h2>\\r\\n\\r\\n<div *ngIf=\\\"!users$\\\">Loading...</div>\\r\\n<!-- <div *ngIf=\\\"users$ | async as users\\\">\\r\\n    <ul>\\r\\n        <li *ngFor=\\\"let user of users\\\">{{user.username}}</li>\\r\\n    </ul>\\r\\n</div> -->\\r\\n\\r\\n<div *ngIf=\\\"users$\\\">\\r\\n    <label>User name:</label>&nbsp;<input #userName />\\r\\n    \\r\\n    <!-- (click) passes input value to add() and then clears the input -->\\r\\n    <button (click)=\\\"add(userName.value); userName.value=''\\\">\\r\\n        add\\r\\n    </button>\\r\\n\\r\\n    <ul class=\\\"items\\\">\\r\\n    <li *ngFor=\\\"let user of users$ | async\\\"\\r\\n    [class.selected]=\\\"user.id === selectedId\\\"\\r\\n    >\\r\\n      <a routerLink=\\\"/users/detail/{{user.id}}\\\">\\r\\n        <span class=\\\"badge\\\">{{user.id}}</span> {{user.username}}</a>\\r\\n        <button class=\\\"delete\\\" title=\\\"delete user\\\"\\r\\n        (click)=\\\"delete(user)\\\">x</button>\\r\\n    </li>\\r\\n  </ul>\\r\\n</div>\\r\\n\\r\\n\\r\\n<!-- <app-user-list></app-user-list> -->\\r\\n<button (click)=\\\"gotoDashboard()\\\">Back to dashboard</button>\"","import { Component, OnInit } from '@angular/core';\r\nimport { Router, ActivatedRoute, ParamMap } from '@angular/router';\r\nimport { Observable } from 'rxjs';\r\nimport { switchMap } from 'rxjs/operators';\r\n\r\nimport { UserService } from '../user-area/user.service';\r\nimport { User } from '../user-area/user';\r\n\r\n@Component({\r\n    selector: 'app-admin-manage-users',\r\n    templateUrl: 'manage-users.component.html',\r\n    styleUrls: [ 'admin.component.css' ],\r\n})\r\nexport class ManageUsersComponent implements OnInit {\r\n    users$: Observable<User[]>;\r\n    theUsers: User[] = [];\r\n    selectedId = 0;\r\n\r\n    constructor(\r\n        private service: UserService,\r\n        private router: Router,\r\n        private route: ActivatedRoute\r\n    ) { }\r\n\r\n    ngOnInit() {\r\n        this.getUsers();\r\n    }\r\n\r\n    gotoDashboard() {\r\n        this.router.navigate([ './' ], );\r\n    }\r\n\r\n    getUsers() {\r\n        this.users$ = this.route.paramMap.pipe(\r\n            switchMap((params: ParamMap) => {\r\n                this.selectedId = +params.get('id');\r\n                return this.service.getUsers();\r\n            })\r\n        );\r\n        this.users$.subscribe(users => this.theUsers = users);\r\n    }\r\n\r\n    add(name: string): void {\r\n        name = name.trim();\r\n        if (!name) { return; }\r\n        this.service.addUser({ id: null, username: name } as User)\r\n          .subscribe(user => {\r\n              this.getUsers();\r\n              this.selectedId = user.id;\r\n          });\r\n      }\r\n    \r\n    delete(user: User): void {\r\n        this.theUsers = this.theUsers.filter(h => h !== user);\r\n        this.service.deleteUser(user).subscribe(() => {\r\n            this.getUsers();\r\n        });\r\n    }\r\n}\r\n","import { animate, state, style, transition, trigger } from '@angular/animations';\r\n\r\nexport const slideInDownAnimation =\r\n    trigger('routeAnimation', [\r\n        state('*',\r\n            style({\r\n                opacity: 1,\r\n                transform: 'translateX(0)'\r\n            })\r\n        ),\r\n        transition(':enter', [\r\n            style({\r\n                opacity: 0,\r\n                transform: 'translateX(-100%)'\r\n            }),\r\n            animate('0.2s ease-in')\r\n        ]),\r\n        transition(':leave', [\r\n            animate('0.5s ease-out', style({\r\n                opacity: 0,\r\n                transform: 'translateY(100%)'\r\n            }))\r\n        ])\r\n    ]);\r\n","import { NgModule } from '@angular/core';\r\nimport { RouterModule, Routes } from '@angular/router';\r\n\r\nimport { UserListComponent } from './user-area/user-list/user-list.component';\r\nimport { UserDetailComponent } from './user-area/user-detail/user-detail.component';\r\nimport { PalliativeListComponent } from './palliative-area/palliative-list/palliative-list.component';\r\nimport { PalliativeDetailComponent } from './palliative-area/palliative-detail/palliative-detail.component';\r\nimport { PageNotFoundComponent } from './not-found.component';\r\nimport { AuthComponent } from './auth/auth.component';\r\nimport { LoginComponent } from './login/login.component';\r\nimport { LogoutComponent } from './logout/logout.component';\r\nimport { HomeComponent } from './home/home.component';\r\nimport { HelpComponent } from './help/help.component';\r\nimport { AuthGuardService } from './auth-guard.service';\r\n\r\nconst routes: Routes = [\r\n  { path: 'home', component: HomeComponent },\r\n  { path: 'help', component: HelpComponent },\r\n  { path: 'login', component: LoginComponent, outlet: 'popup' },\r\n  { path: 'logout', component: LogoutComponent, outlet: 'popup' },\r\n  { path: '', redirectTo: '/home', pathMatch: 'full' },\r\n  { path: '**', component: PageNotFoundComponent },\r\n];\r\n\r\n@NgModule({\r\n  exports: [ RouterModule ],\r\n  imports: [ RouterModule.forRoot(routes, {onSameUrlNavigation: 'reload'}) ]\r\n})\r\nexport class AppRoutingModule { }\r\n","module.exports = \"/* AppComponent's private CSS styles */\\r\\n\\r\\n/* h1 {\\r\\n  font-size: 1.2em;\\r\\n  color: #999;\\r\\n  margin-bottom: 0;\\r\\n}\\r\\n\\r\\nh2 {\\r\\n  font-size: 2em;\\r\\n  margin-top: 0;\\r\\n  padding-top: 0;\\r\\n} */\\r\\n\\r\\n/* nav a {\\r\\n  padding: 5px 10px;\\r\\n  text-decoration: none;\\r\\n  margin-top: 10px;\\r\\n  display: inline-block;\\r\\n  background-color: #eee;\\r\\n  border-radius: 4px;\\r\\n}\\r\\n\\r\\nnav a:visited,\\r\\na:link {\\r\\n  color: #607d8b;\\r\\n}\\r\\n\\r\\nnav a:hover {\\r\\n  color: #039be5;\\r\\n  background-color: #cfd8dc;\\r\\n}\\r\\n\\r\\nnav a.active {\\r\\n  color: #039be5;\\r\\n} */\\r\\n\"","module.exports = \"<table class=\\\"branding branding-uaf\\\">\\r\\n  <tr>\\r\\n    <td>\\r\\n      <a href=\\\"http://www.uaf.edu\\\">\\r\\n        <img width=\\\"48px\\\" src=\\\"assets/uaf-logo-web.png\\\" />\\r\\n      </a>\\r\\n    </td>\\r\\n    <td width=\\\"100%\\\">\\r\\n      <div>Alaska University Transportation Center (AUTC)</div>\\r\\n      <div>Institute of Northern Engineering</div>\\r\\n    </td>\\r\\n  </tr>\\r\\n</table>\\r\\n\\r\\n<h1><img style=\\\"vertical-align:middle; height: 1em;\\\" src=\\\"assets/dust-app-logo.png\\\"/>&nbsp;{{title}}</h1>\\r\\n<nav>\\r\\n  <!-- <a routerLink=\\\"/dashboard\\\">Dashboard</a> -->\\r\\n  <a routerLink=\\\"/home\\\" routerLinkActive=\\\"active\\\">Home</a>\\r\\n  <a routerLink=\\\"/palliatives\\\" routerLinkActive=\\\"active\\\">Palliatives</a>\\r\\n  <!-- <a *ngIf=\\\"authService.isTechnician\\\" routerLink=\\\"/technician\\\" routerLinkActive=\\\"active\\\">Technician</a> -->\\r\\n  <a *ngIf=\\\"authService.isAdmin\\\" routerLink=\\\"/users\\\" routerLinkActive=\\\"active\\\">Users</a>\\r\\n  <!-- <a *ngIf=\\\"authService.isAdmin\\\" routerLink=\\\"/admin\\\" routerLinkActive=\\\"active\\\">Admin</a> -->\\r\\n  <a routerLink=\\\"/help\\\" routerLinkActive=\\\"active\\\">Help</a>\\r\\n\\r\\n  <span *ngIf=\\\"!authService.isLoggedIn\\\"><a [routerLink]=\\\"[{ outlets: { popup: ['login'] } }]\\\" routerLinkActive=\\\"active\\\">Log in</a></span>\\r\\n  <span *ngIf=\\\"authService.isLoggedIn\\\"><a [routerLink]=\\\"[{ outlets: { popup: ['logout'] } }]\\\" routerLinkActive=\\\"active\\\">Log out</a>\\r\\n    Signed in as {{authService.signedInUser}}</span>\\r\\n</nav>\\r\\n\\r\\n<div class=\\\"popup\\\"><router-outlet name=\\\"popup\\\"></router-outlet></div>\\r\\n<div class=\\\"mainnav\\\"><router-outlet></router-outlet></div>\\r\\n\\r\\n<app-messages></app-messages>\\r\\n\\r\\n<hr/>\\r\\n\\r\\n<table class=\\\"branding branding-cset\\\">\\r\\n    <tr>\\r\\n      <td>\\r\\n        <a href=\\\"http://cset.uaf.edu/\\\">\\r\\n          <img width=\\\"48px\\\" src=\\\"assets/cset-logo-web.png\\\" />\\r\\n        </a>\\r\\n      </td>\\r\\n      <td width=\\\"100%\\\">\\r\\n        <div class=\\\"branding-cset\\\">Center for Safety Equity in Transportation</div>\\r\\n      </td>\\r\\n    </tr>\\r\\n  </table>\"","import { Component, OnInit } from '@angular/core';\r\nimport { AuthService } from './auth.service';\r\n\r\n@Component({\r\n  selector: 'app-root',\r\n  templateUrl: './app.component.html',\r\n  styleUrls: ['./app.component.css']\r\n})\r\nexport class AppComponent implements OnInit {\r\n  title = 'Dust Palliative MPRT Calculator';\r\n  signedInUser = 'nobody';\r\n\r\n  constructor(private authService: AuthService) { }\r\n\r\n  ngOnInit() {\r\n    this.signedInUser = (this.authService.isLoggedIn ? 'somebody' : 'Log in');\r\n  }\r\n}\r\n","import { BrowserModule } from '@angular/platform-browser';\r\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\r\nimport { NgModule } from '@angular/core';\r\nimport { FormsModule } from '@angular/forms'; // <-- NgModel lives here\r\nimport { HttpClientModule } from '@angular/common/http';\r\nimport { HttpClientInMemoryWebApiModule } from 'angular-in-memory-web-api';\r\nimport { InMemoryDataService } from './in-memory-data.service';\r\n\r\nimport { AppComponent } from './app.component';\r\nimport { MessagesComponent } from './messages/messages.component';\r\nimport { AppRoutingModule } from './app-routing.module';\r\n\r\nimport { UsersRoutingModule } from './user-area/users-routing.module';\r\nimport { UserListComponent } from './user-area/user-list/user-list.component';\r\nimport { UserDetailComponent } from './user-area/user-detail/user-detail.component';\r\nimport { UserSearchComponent } from './user-area/user-search/user-search.component';\r\n\r\nimport { PalliativeListComponent } from './palliative-area/palliative-list/palliative-list.component';\r\nimport { PalliativeDetailComponent } from './palliative-area/palliative-detail/palliative-detail.component';\r\nimport { PalliativeSearchComponent } from './palliative-area/palliative-search/palliative-search.component';\r\nimport { PageNotFoundComponent } from './not-found.component';\r\nimport { PalliativesRoutingModule } from './palliative-area/palliatives-routing.component';\r\nimport { AdminRoutingModule } from './admin/admin-routing.module';\r\nimport { AdminModule } from './admin/admin.module';\r\nimport { LoginComponent } from './login/login.component';\r\nimport { AuthComponent } from './auth/auth.component';\r\nimport { LogoutComponent } from './logout/logout.component';\r\nimport { HelpComponent } from './help/help.component';\r\nimport { HomeComponent } from './home/home.component';\r\n\r\n@NgModule({\r\n  declarations: [\r\n    AppComponent,\r\n    PageNotFoundComponent,\r\n    UserListComponent,\r\n    UserDetailComponent,\r\n    MessagesComponent,\r\n    UserSearchComponent,\r\n    PalliativeListComponent,\r\n    PalliativeDetailComponent,\r\n    PalliativeSearchComponent,\r\n    LoginComponent,\r\n    AuthComponent,\r\n    LogoutComponent,\r\n    HelpComponent,\r\n    HomeComponent,\r\n  ],\r\n  imports: [\r\n    BrowserModule,\r\n    BrowserAnimationsModule,\r\n    FormsModule,\r\n    UsersRoutingModule,\r\n    PalliativesRoutingModule,\r\n    AdminRoutingModule,\r\n    AppRoutingModule,\r\n    AdminModule,\r\n    HttpClientModule,\r\n    // The HttpClientInMemoryWebApiModule module intercepts HTTP requests\r\n    // and returns simulated server responses.\r\n    // Remove it when a real server is ready to receive requests.\r\n    // HttpClientInMemoryWebApiModule.forRoot(\r\n    //   InMemoryDataService, { dataEncapsulation: false }\r\n    // )\r\n  ],\r\n  providers: [],\r\n  bootstrap: [AppComponent]\r\n})\r\nexport class AppModule { }\r\n","import { Injectable } from '@angular/core';\r\nimport { Observable, of, BehaviorSubject } from 'rxjs';\r\nimport { tap, delay } from 'rxjs/operators';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class AuthService {\r\n  isLoggedIn = false;\r\n  isAdmin = false;\r\n  isTechnician = false;\r\n  bisLoggedIn: BehaviorSubject<boolean> = new BehaviorSubject<boolean>(false);\r\n  signedInUser = 'nobody';\r\n  signedInUserId = 0;\r\n  username = 'username';\r\n  password = 'password';\r\n\r\n  // store redirect URL\r\n  redirectUrl: string;\r\n\r\n  login(): Observable<boolean> {\r\n    return of (true).pipe(\r\n      delay(1000),\r\n      tap(val => {\r\n        this.isLoggedIn = true;\r\n        this.isAdmin = true;\r\n        this.isTechnician = true;\r\n        this.bisLoggedIn.next(this.isLoggedIn);\r\n        this.signedInUser = 'somebody';\r\n        this.signedInUserId = 21;\r\n      })\r\n    );\r\n  }\r\n\r\n  logout(): void {\r\n    this.isLoggedIn = false;\r\n    this.isAdmin = false;\r\n    this.isTechnician = false;\r\n    this.bisLoggedIn.next(this.isLoggedIn);\r\n    this.signedInUser = 'nobody';\r\n    this.signedInUserId = 0;\r\n  }\r\n\r\n  constructor() { }\r\n}\r\n","module.exports = \"\"","module.exports = \"<p>\\r\\n  auth works!\\r\\n</p>\\r\\n\"","import { Component, OnInit } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-auth',\r\n  templateUrl: './auth.component.html',\r\n  styleUrls: ['./auth.component.css']\r\n})\r\nexport class AuthComponent implements OnInit {\r\n\r\n  constructor() { }\r\n\r\n  ngOnInit() {\r\n  }\r\n\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { Observable, of } from 'rxjs';\r\nimport { catchError, map, tap } from 'rxjs/operators';\r\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\r\n\r\nimport { MessageService } from './messages/message.service';\r\nimport { DevServiceUrl, PhpAdminUrl, BaseServiceUrl } from './serviceUrls';\r\n\r\nconst httpOptions = {\r\n  headers: new HttpHeaders({ 'Content-Type': 'application/json' })\r\n};\r\n\r\nexport class DustDBServiceRequest {\r\n  constructor(\r\n    public request = '',\r\n    public result = '',\r\n    public token = ''\r\n  ) { }\r\n};\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class DustDBService {\r\n  private url = '';\r\n\r\n  constructor(\r\n    private http: HttpClient,\r\n    private messageService: MessageService\r\n  ) {\r\n    let url: string = window.location.href;\r\n    if (url.search(/localhost/) >= 0) {\r\n      this.url = DevServiceUrl + PhpAdminUrl;\r\n    } else {\r\n      this.url = BaseServiceUrl + PhpAdminUrl;\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Send POST message to initialize database\r\n   * This will probably be deprecated as soon as other services are finalized.\r\n   */\r\n  initializeDB() {\r\n    this.log('POSTing initialize request');\r\n    let status = new DustDBServiceRequest('initialize');\r\n    this.http.post<DustDBServiceRequest>(this.url, status, httpOptions).pipe(\r\n      tap((status: DustDBServiceRequest) => this.log(`${this.url} replied with ${status.result}`)),\r\n      catchError(this.handleError<DustDBServiceRequest>('initializeDB'))\r\n    );\r\n  }\r\n\r\n  /**\r\n   * Handle Http operation that failed.\r\n   * Let the app continue.\r\n   * @param operation - name of the operation that failed\r\n   * @param result - optional value to return as the observable result\r\n   */\r\n  private handleError<T>(operation = 'operation', result?: T) {\r\n    return (error: any): Observable<T> => {\r\n\r\n      // TODO: send the error to remote logging infrastructure\r\n      console.error(error); // log to console instead\r\n\r\n      // TODO: better job of transforming error for user consumption\r\n      this.log(`${operation} failed: ${error.message}`);\r\n\r\n      // Let the app keep running by returning an empty result.\r\n      return of(result as T);\r\n    };\r\n  }\r\n\r\n  /**\r\n   * Log a UserService message with the MessageService.\r\n   * @param message - message to print to message service\r\n   */\r\n  private log(message: string) {\r\n    this.messageService.add(`DustDBService: ${message}`);\r\n  }\r\n}\r\n","module.exports = \"\"","module.exports = \"<p>\\n  help works!\\n</p>\\n\"","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-help',\n  templateUrl: './help.component.html',\n  styleUrls: ['./help.component.css']\n})\nexport class HelpComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n","module.exports = \"\"","module.exports = \"<!-- <app-palliative-search></app-palliative-search> -->\\n\\n<div class=\\\"wrap\\\">\\n    <!-- <h1>About</h1> -->\\n    <p>Welcome to the UAF Dust Palliative MPRT Calculator. It is\\n      designed to calculate the <em>mean particle residence time</em>,\\n      or Greek letter tau <span style=\\\"font-family: serif\\\">&tau;</span>,\\n      of a dust palliative.\\n      This allows us to compare the performance of different palliatives\\n      using a scientifically based test. The purpose of this website is\\n      to enable technicians to upload test data, calculate the MPRT,\\n      and publish the results of such tests.\\n    </p>\\n    <p>Currently, this website is a <em>proof of concept</em> showing\\n      what we hope to deliver when it is finished.</p>\\n    <figure style=\\\"width: 80%; min-width: 32px; max-width: 300px;\\\">\\n        <img class=scaled src=\\\"assets/dustcolumn-300px.jpg\\\" />\\n        <figcaption>The dust column used to test the performance of a palliative.</figcaption>\\n    </figure>\\n    <figure style=\\\"width: 80%; min-width: 32px; max-width: 300px;\\\">\\n        <img class=scaled src=\\\"assets/meter-300px.jpg\\\" />\\n        <figcaption>The nephelometer measures the concentration over time.</figcaption>\\n    </figure>\\n</div>\\n\"","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-home',\n  templateUrl: './home.component.html',\n  styleUrls: ['./home.component.css']\n})\nexport class HomeComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n","module.exports = \"\"","module.exports = \"<div class=\\\"popup padded\\\">\\r\\n    <h3>LOGIN</h3>\\r\\n    <p>{{message}}</p>\\r\\n    <div *ngIf=\\\"!authService.isLoggedIn\\\">\\r\\n      <label>Username:<input [(ngModel)]=\\\"username\\\" placeholder=\\\"username\\\"></label><br/>\\r\\n      <label>Password:<input type=\\\"password\\\" [(ngModel)]=\\\"password\\\" placeholder=\\\"password\\\"></label>\\r\\n    </div>\\r\\n    <p>\\r\\n      <button (click)=\\\"login()\\\" *ngIf=\\\"!authService.isLoggedIn\\\">Login</button>\\r\\n      <button (click)=\\\"logout()\\\" *ngIf=\\\"authService.isLoggedIn\\\">Logout</button>\\r\\n      <button (click)=\\\"cancel()\\\">Cancel</button>\\r\\n    </p>    \\r\\n</div>\\r\\n\"","import { Component, HostBinding, OnInit } from '@angular/core';\r\nimport { Router } from '@angular/router';\r\nimport { AuthService } from '../auth.service';\r\n\r\nimport { slideInDownAnimation } from '../animations';\r\n\r\n@Component({\r\n  selector: 'app-login',\r\n  templateUrl: './login.component.html',\r\n  styleUrls: ['./login.component.css'],\r\n  animations: [slideInDownAnimation]\r\n})\r\nexport class LoginComponent implements OnInit {\r\n  @HostBinding('@routeAnimation') routeAnimation = true;\r\n  @HostBinding('style.display') display = 'block';\r\n  @HostBinding('style.position') position = 'absolute';\r\n\r\n  message = 'not set';\r\n\r\n  constructor(\r\n    public authService: AuthService,\r\n    public router: Router\r\n  ) { }\r\n\r\n  ngOnInit() {\r\n    this.setMessage();\r\n  }\r\n\r\n  setMessage() {\r\n    this.message = 'Logged ' + (this.authService.isLoggedIn ? 'in' : 'out');\r\n  }\r\n\r\n  login() {\r\n    this.message = 'Trying to log in ...';\r\n\r\n    this.authService.login().subscribe(() => {\r\n      this.setMessage();\r\n\r\n      setTimeout(() => {\r\n        // Providing a `null` value to the named outlet\r\n        // clears the contents of the named outlet\r\n        this.router.navigate([{ outlets: { popup: null } }]);\r\n      }, 250);\r\n\r\n      if (this.authService.isLoggedIn) {\r\n        this.navigateDefault();\r\n      }\r\n    });\r\n  }\r\n\r\n  logout() {\r\n    this.authService.logout();\r\n    this.setMessage();\r\n    this.navigateDefault();\r\n  }\r\n\r\n  cancel() {\r\n    this.closePopup();\r\n  }\r\n\r\n  navigateDefault() {\r\n        // Get the redirect URL from our auth service\r\n        // If no redirect has been set, use the default\r\n        const redirect = this.authService.redirectUrl ? this.authService.redirectUrl : '/home';\r\n\r\n        // Redirect the user\r\n        // this.router.navigate([redirect]);\r\n  }\r\n\r\n  closePopup() {\r\n    // Providing a `null` value to the named outlet\r\n    // clears the contents of the named outlet\r\n    this.router.navigate([{ outlets: { popup: null } }]);\r\n  }\r\n}\r\n","module.exports = \"\"","module.exports = \"<div class=\\\"popup padded\\\">\\r\\n  <p>Logging out...</p>\\r\\n</div>\\r\\n<!-- \\r\\n<button (click)=\\\"gotoDashboard()\\\">back to dashboard</button> -->\\r\\n\"","import { Component, OnInit, HostBinding } from '@angular/core';\r\nimport { Router } from '@angular/router';\r\nimport { AuthService } from '../auth.service';\r\nimport { MessageService } from '../messages/message.service';\r\n\r\nimport { slideInDownAnimation } from '../animations';\r\n\r\n@Component({\r\n  selector: 'app-logout',\r\n  templateUrl: './logout.component.html',\r\n  styleUrls: ['./logout.component.css'],\r\n  animations: [slideInDownAnimation]\r\n})\r\nexport class LogoutComponent implements OnInit {\r\n  @HostBinding('@routeAnimation') routeAnimation = true;\r\n  @HostBinding('style.display') display = 'block';\r\n  @HostBinding('style.position') position = 'absolute';\r\n\r\n  constructor(\r\n    private authService: AuthService,\r\n    private messageService: MessageService,\r\n    private router: Router\r\n  ) { }\r\n\r\n  ngOnInit() {\r\n    this.authService.logout();\r\n    // this.router.navigate(['/']);\r\n\r\n    setTimeout(() => {\r\n      // Providing a `null` value to the named outlet\r\n      // clears the contents of the named outlet\r\n      this.router.navigate([{ outlets: { popup: null } }]);\r\n    }, 500);\r\n  }\r\n\r\n  gotoDashboard() {\r\n    this.router.navigate(['/dashboard']);\r\n  }\r\n}\r\n","import { Injectable } from '@angular/core';\r\n\r\n@Injectable({\r\n  providedIn: 'root',\r\n})\r\nexport class MessageService {\r\n  messages: string[] = [];\r\n\r\n  add(message: string) {\r\n    this.messages.push(message);\r\n  }\r\n\r\n  clear() {\r\n    this.messages = [];\r\n  }\r\n}\r\n","module.exports = \"/* MessagesComponent's private CSS styles\\r\\n\\r\\nh2 {\\r\\n  color: red;\\r\\n  font-weight: lighter;\\r\\n  line-height: 1;\\r\\n  display: block;\\r\\n  margin: none;\\r\\n}\\r\\n\\r\\nbody {\\r\\n  margin: 2em;\\r\\n}\\r\\n\\r\\nbody,\\r\\ninput[text],\\r\\nbutton {\\r\\n  color: crimson;\\r\\n  font-family: Cambria, Georgia;\\r\\n}\\r\\n\\r\\nbutton.clear {\\r\\n  font-family: Arial;\\r\\n  background-color: #eee;\\r\\n  border: none;\\r\\n  padding: 5px 10px;\\r\\n  border-radius: 4px;\\r\\n  cursor: pointer;\\r\\n  cursor: hand;\\r\\n}\\r\\n\\r\\nbutton:hover {\\r\\n  background-color: #cfd8dc;\\r\\n}\\r\\n\\r\\nbutton:disabled {\\r\\n  background-color: #eee;\\r\\n  color: #aaa;\\r\\n  cursor: auto;\\r\\n}\\r\\n\\r\\nbutton.clear {\\r\\n  color: #888;\\r\\n  margin-bottom: 12px;\\r\\n}\\r\\n\\r\\n.messages {\\r\\n  background: #333333;\\r\\n  display: block;\\r\\n  border-radius: 4px;\\r\\n} */\"","module.exports = \"<div *ngIf=\\\"messageService.messages.length\\\" class=\\\"messages padded\\\">\\r\\n\\r\\n  <h2>Messages</h2>\\r\\n  <button class=\\\"clear\\\" (click)=\\\"messageService.clear()\\\">clear</button>\\r\\n  <div *ngFor='let message of messageService.messages'>{{message}}</div>\\r\\n\\r\\n</div>\\r\\n\"","import { Component, OnInit } from '@angular/core';\r\nimport { MessageService } from './message.service';\r\n\r\n@Component({\r\n  selector: 'app-messages',\r\n  templateUrl: './messages.component.html',\r\n  styleUrls: ['./messages.component.css']\r\n})\r\nexport class MessagesComponent implements OnInit {\r\n\r\n  constructor(public messageService: MessageService) { }\r\n\r\n  ngOnInit() {\r\n  }\r\n\r\n}\r\n","import { Component } from '@angular/core';\r\nimport { Router } from '@angular/router';\r\n\r\n@Component({\r\n    template: '<h2>Page not found</h2><button (click)=\"gotoDashboard()\">back to dashboard</button>'\r\n})\r\nexport class PageNotFoundComponent {\r\n    constructor(private router: Router) { }\r\n\r\n    gotoDashboard() {\r\n        this.router.navigate([ '/dashboard' ]);\r\n    }\r\n}\r\n","module.exports = \"\"","module.exports = \"<div *ngIf=\\\"palliative\\\">\\r\\n\\r\\n  <h1>\\\"{{palliative.shortname | uppercase}}\\\" Details</h1>\\r\\n  <h2>\\\"{{palliative.longname}}\\\"</h2>\\r\\n  <table class=\\\"altcolors\\\"><tbody class=\\\"altcolors\\\">\\r\\n    <tr><td><label>id:</label></td><td class=\\\"description\\\">{{palliative.id}}</td></tr>\\r\\n    <tr><td><label>Test ID:</label></td><td class=\\\"description\\\">{{palliative.testid}}</td></tr>\\r\\n    <tr><td><label>Description:</label></td><td class=\\\"description\\\">{{palliative.description}}</td></tr>\\r\\n    <tr><td><label>userid:</label></td><td>{{palliative.userid}}<span *ngIf=\\\"user\\\"> | {{user.username}} | {{user.firstname}} {{user.lastname}}</span></td></tr>\\r\\n    <tr><td><label>mprt <span style=\\\"font-family: serif;\\\">&tau;</span>:</label></td><td>{{palliative.mprt}}</td></tr>\\r\\n    <tr><td><label>mprt <span style=\\\"font-family: serif; font-style: italic;\\\">t</span></label></td><td>{{palliative.mprtTime}}</td></tr>\\r\\n  </tbody>\\r\\n  </table>\\r\\n\\r\\n  <div class=\\\"mprtGraph\\\">\\r\\n    <label>MPRT <span style=\\\"font-family: serif;\\\">&tau;</span> Graph</label>\\r\\n    <button *ngIf=\\\"!graphVisible\\\" (click)=\\\"showGraph()\\\">show</button>\\r\\n    <button *ngIf=\\\"graphVisible\\\" (click)=\\\"hideGraph()\\\">hide</button>\\r\\n    <button *ngIf=\\\"graphVisible\\\" (click)=\\\"plotGraph()\\\">plot</button>\\r\\n    <div *ngIf=\\\"graphVisible\\\">\\r\\n      <div id=\\\"mprtGraphC\\\"></div>\\r\\n      <div id=\\\"mprtGraphLnC\\\"></div>\\r\\n      <div id=\\\"mprtGraphDeriv1\\\"></div>\\r\\n      <div id=\\\"mprtGraphDeriv2\\\"></div>\\r\\n      <div id=\\\"mprtGraphRSQ\\\"></div>\\r\\n    </div>\\r\\n  </div>\\r\\n\\r\\n  <div class=\\\"dataPointList\\\">\\r\\n    <label>Data Points</label>\\r\\n      <button *ngIf=\\\"!dataVisible\\\" (click)=\\\"showData()\\\">show</button>\\r\\n      <button *ngIf=\\\"dataVisible\\\" (click)=\\\"hideData()\\\">hide</button>\\r\\n    \\r\\n    <table *ngIf=\\\"dataVisible\\\">\\r\\n      <tbody class=\\\"altcolors\\\">\\r\\n      <tr><th>t</th><th>C</th><th>ln(C)</th><th>C'(t)</th><th>C''(t)</th><th>R^2</th></tr>\\r\\n      <tr *ngFor=\\\"let dp of palliative.data\\\" class=\\\"dataPoint\\\">\\r\\n        <td>{{dp.t | number}}</td>\\r\\n        <td>{{dp.C | number}}</td>\\r\\n        <td>{{dp.lnC | number}}</td>\\r\\n        <td>{{dp.dCdt | number}}</td>\\r\\n        <td>{{dp.deriv2 | number}}</td>\\r\\n        <td>{{dp.rsq | number}}</td>\\r\\n      </tr>\\r\\n    </tbody>\\r\\n    </table>\\r\\n  </div>\\r\\n  \\r\\n  <button *ngIf=\\\"!technicianView && authService.isTechnician\\\" (click)=\\\"edit()\\\">Edit</button>\\r\\n\\r\\n  <div *ngIf=\\\"technicianView\\\">\\r\\n    <h1>Edit Details</h1>\\r\\n    <div><label>Test ID:</label>&nbsp;<input [(ngModel)]=\\\"palliative.testid\\\" placeholder=\\\"testid\\\"/></div>\\r\\n    <div><label>Short Name:</label>&nbsp;<input [(ngModel)]=\\\"palliative.shortname\\\" placeholder=\\\"shortname\\\"/></div>\\r\\n    <div><label>Long Name:</label>&nbsp;<input [(ngModel)]=\\\"palliative.longname\\\" placeholder=\\\"longname\\\"/></div>\\r\\n    <div><label>Description:</label>&nbsp;<input [(ngModel)]=\\\"palliative.description\\\" placeholder=\\\"description\\\"/></div>\\r\\n    <div><label>User Id:</label>&nbsp;<input [(ngModel)]=\\\"palliative.userid\\\" placeholder=\\\"userid\\\"/></div>\\r\\n\\r\\n    <button (click)=\\\"save()\\\">save</button>\\r\\n    <button (click)=\\\"cancel()\\\">cancel</button>\\r\\n    <button (click)=\\\"cleanData()\\\">clean</button>\\r\\n    <button (click)=\\\"calcMPRT()\\\">calc mprt</button>\\r\\n    \\r\\n    <div class=\\\"dataPointList padded\\\">\\r\\n      <h3>Data Points</h3>\\r\\n      <br/><textarea [(ngModel)]=\\\"textboxText\\\" cols=\\\"40\\\" rows=\\\"10\\\">{{textboxText}}</textarea>\\r\\n      <br/><button (click)=\\\"importCSV()\\\">import CSV</button>\\r\\n      <table>\\r\\n        <tr><th>t</th><th>C</th></tr>\\r\\n        <tr *ngFor=\\\"let dp of palliative.data\\\" class=\\\"dataPoint\\\">\\r\\n          <td><input [(ngModel)]=\\\"dp.t\\\"/></td>\\r\\n          <td><input [(ngModel)]=\\\"dp.C\\\"/></td>\\r\\n        </tr>\\r\\n      </table>\\r\\n      <button (click)=\\\"addDatapoint()\\\">add datapoint</button>\\r\\n    </div>\\r\\n\\r\\n  </div>\\r\\n\\r\\n</div>\\r\\n\"","import { Component, OnInit, Input, AfterViewInit, ChangeDetectorRef } from '@angular/core';\r\nimport { Router, ActivatedRoute } from '@angular/router';\r\nimport { Location } from '@angular/common';\r\nimport { Palliative, DustColumnDataPoint, DustColumnGraphType } from '../palliative';\r\nimport { PalliativeService } from '../palliative.service';\r\nimport { User } from '../../user-area/user';\r\nimport { UserService } from '../../user-area/user.service';\r\nimport { AuthService } from '../../auth.service';\r\n// import * as Plotly from 'plotly.js';\r\ndeclare var Plotly: any;\r\n\r\n@Component({\r\n  selector: 'app-palliative-detail',\r\n  templateUrl: './palliative-detail.component.html',\r\n  styleUrls: ['./palliative-detail.component.css']\r\n})\r\nexport class PalliativeDetailComponent implements OnInit {\r\n  @Input() palliative: Palliative;\r\n  @Input() user: User;\r\n  dataVisible = false;\r\n  graphVisible = false;\r\n  textboxText = '';\r\n  technicianView = false;\r\n\r\n  constructor(\r\n    private route: ActivatedRoute,\r\n    private router: Router,\r\n    private palliativeService: PalliativeService,\r\n    private authService: AuthService,\r\n    private userService: UserService,\r\n    private location: Location\r\n  ) { }\r\n\r\n  ngOnInit() {\r\n    this.getPalliative();\r\n    this.router.onSameUrlNavigation = \"reload\";\r\n  }\r\n\r\n  getUser(): void {\r\n    if (this.palliative && this.palliative.userid > 0) {\r\n      this.userService.getUser(this.palliative.userid).subscribe(user => this.user = user);\r\n    }\r\n  }\r\n\r\n  getPalliative(): void {\r\n    const id = +this.route.snapshot.paramMap.get('id');\r\n    this.palliativeService.getPalliative(id).subscribe(palliative => {\r\n      this.palliative = palliative;\r\n      this.getUser();\r\n    });\r\n  }\r\n\r\n  addDatapoint(): void {\r\n    if (!(this.palliative.data instanceof Array)) {\r\n      this.palliative.data = [];\r\n    }\r\n    this.palliative.data.push(new DustColumnDataPoint());\r\n  }\r\n\r\n  save(): void {\r\n    this.palliativeService.updatePalliative(this.palliative)\r\n      .subscribe(() => this.getPalliative());\r\n  }\r\n\r\n  goBack(): void {\r\n    this.location.back();\r\n  }\r\n\r\n  gotoPalliatives(): void {\r\n    this.router.navigate(['/palliatives']);\r\n  }\r\n\r\n  edit(): void {\r\n    this.technicianView = true;\r\n  }\r\n\r\n  cancel(): void {\r\n    this.technicianView = false;\r\n    this.getPalliative();\r\n    // this.gotoPalliatives();\r\n  }\r\n\r\n  showData() {\r\n    this.dataVisible = true;\r\n  }\r\n\r\n  hideData() {\r\n    this.dataVisible = false;\r\n  }\r\n\r\n  showGraph() {\r\n    this.graphVisible = true;\r\n    setTimeout(() => {\r\n      if (this.palliative.mprt === null) {\r\n        this.calcMPRT();\r\n      }\r\n      this.plotGraph();\r\n    }, 500);\r\n  }\r\n\r\n  hideGraph() {\r\n    this.graphVisible = false;\r\n  }\r\n\r\n  plotGraph() {\r\n    if (!this.graphVisible)\r\n      return;\r\n    let e: HTMLDivElement;\r\n    // let trace1 = {\r\n    //   x: [],\r\n    //   y: [],\r\n    //   mode: 'lines',\r\n    //   type: 'scatter'\r\n    // };\r\n\r\n    // for (let element of this.palliative.data) {\r\n    //   trace1.x.push(element.t);\r\n    //   trace1.y.push(element.C);\r\n    // }\r\n\r\n    // let xys = this.palliative.getXYs(DustColumnGraphType.Concentration, 'lines', 'scatter');\r\n    // trace1.x = xys.x;\r\n    // trace1.y = xys.y;\r\n    if (!(this.palliative instanceof Palliative)) {\r\n      this.palliative = Palliative.CreateFromJSON(this.palliative);\r\n    }\r\n\r\n    let graphs = [\r\n      { id: 'mprtGraphC', type: DustColumnGraphType.Concentration },\r\n      { id: 'mprtGraphLnC', type: DustColumnGraphType.LnC },\r\n      { id: 'mprtGraphDeriv1', type: DustColumnGraphType.dCdt },\r\n      { id: 'mprtGraphDeriv2', type: DustColumnGraphType.Deriv2 },\r\n      { id: 'mprtGraphRSQ', type: DustColumnGraphType.RSQ }\r\n    ];\r\n    for (let g of graphs) {\r\n      let data = this.palliative.getXYs(g.type, 'lines', 'scatter');\r\n      let layout = this.palliative.getLayout(g.type);\r\n      e = <HTMLDivElement>document.getElementById(g.id);\r\n      Plotly.plot(e, data, layout);\r\n    }\r\n\r\n\r\n    // let layout = {\r\n    //   xaxis: {\r\n    //     title: 'time (t)'\r\n    //   },\r\n    //   yaxis: {\r\n    //     title: 'Concentration (C)'\r\n    //   },\r\n    //   title: 'Mean Particle Residence Time'\r\n    // };\r\n\r\n  }\r\n\r\n  calcMPRT() {\r\n    let p = new Palliative();\r\n    for (let value of this.palliative.data) {\r\n      p.data.push(new DustColumnDataPoint(value.t, value.C));\r\n    }\r\n    p.calcMPRT();\r\n    this.palliative.data = p.data;\r\n    this.palliative.mprt = p.mprt;\r\n    this.palliative.mprtTime = p.mprtTime;\r\n  }\r\n\r\n  cleanData() {\r\n    let p = new Palliative();\r\n    for (let value of this.palliative.data) {\r\n      p.data.push(new DustColumnDataPoint(value.t, value.C));\r\n    }\r\n    p.cleanData();\r\n    this.palliative.data = p.data;\r\n  }\r\n\r\n  importCSV() {\r\n    let p = new Palliative();\r\n    p.importFromCSV(this.textboxText);\r\n    this.palliative.data = p.data;\r\n  }\r\n}\r\n","module.exports = \"\"","module.exports = \"<app-palliative-search></app-palliative-search>\\r\\n\\r\\n<div *ngIf=\\\"authService.isTechnician\\\">\\r\\n    <label>Add Palliative</label>&nbsp;\\r\\n      <input #palliativeName />\\r\\n    <!-- (click) passes input value to add() and then clears the input -->\\r\\n    <button (click)=\\\"add(palliativeName.value); palliativeName.value=''\\\">add</button>\\r\\n</div>\\r\\n\\r\\n<ul class=\\\"items\\\">\\r\\n  <li *ngFor=\\\"let palliative of palliatives\\\">\\r\\n    <a routerLink=\\\"/palliatives/detail/{{palliative.id}}\\\">\\r\\n    <span class=\\\"badge\\\">{{palliative.id}}</span>{{palliative.shortname}}</a>\\r\\n    <button *ngIf=\\\"authService.isAdmin\\\" class=\\\"delete\\\" title=\\\"delete palliative\\\" (click)=\\\"delete(palliative)\\\">x</button>\\r\\n  </li>\\r\\n</ul>\\r\\n\\r\\n<!-- <app-palliative-detail [palliative]=\\\"selectedPalliative\\\"></app-palliative-detail> -->\\r\\n\\r\\n\"","import { Component, OnInit } from '@angular/core';\r\nimport { Palliative } from '../palliative';\r\nimport { PalliativeService } from '../palliative.service';\r\nimport { AuthService } from '../../auth.service';\r\n\r\n@Component({\r\n  selector: 'app-palliative-list',\r\n  templateUrl: './palliative-list.component.html',\r\n  styleUrls: ['./palliative-list.component.css']\r\n})\r\nexport class PalliativeListComponent implements OnInit {\r\n  palliatives: Palliative[];\r\n  private selectedId: number;\r\n\r\n  constructor(\r\n    private palliativeService: PalliativeService,\r\n    private authService: AuthService\r\n  ) { }\r\n\r\n  ngOnInit() {\r\n    this.getPalliatives();\r\n  }\r\n\r\n  add(name: string): void {\r\n    name = name.trim();\r\n    if (!name) { return; }\r\n    this.palliativeService.addPalliative({ id: null, shortname: name } as Palliative)\r\n      .subscribe(palliative => {\r\n        this.getPalliatives();\r\n      });\r\n  }\r\n\r\n  delete(palliative: Palliative): void {\r\n    this.palliativeService.deletePalliative(palliative).subscribe(() => {\r\n      this.getPalliatives();\r\n    });\r\n  }\r\n\r\n  getPalliatives(): void {\r\n    this.palliativeService.getPalliatives().subscribe(palliatives => this.palliatives = palliatives);\r\n  }\r\n}\r\n","module.exports = \"\"","module.exports = \"<div id=\\\"palliative-search-component\\\">\\r\\n\\r\\n  <label>Palliative Search</label>&nbsp;\\r\\n<input #searchBox id=\\\"search-box\\\" (keyup)=\\\"search(searchBox.value)\\\" />\\r\\n\\r\\n<ul class=\\\"search-result\\\">\\r\\n  <li *ngFor=\\\"let palliative of palliatives$ | async\\\">\\r\\n    <a routerLink=\\\"/palliatives/detail/{{palliative.id}}\\\">{{palliative.shortname}}</a>\\r\\n  </li>\\r\\n</ul>\\r\\n</div>\"","import { Component, OnInit } from '@angular/core';\r\nimport { Observable, Subject } from 'rxjs';\r\n\r\nimport {\r\n  debounceTime, distinctUntilChanged, switchMap\r\n} from 'rxjs/operators';\r\n\r\nimport { Palliative } from '../palliative';\r\nimport { PalliativeService } from '../palliative.service';\r\n\r\n@Component({\r\n  selector: 'app-palliative-search',\r\n  templateUrl: './palliative-search.component.html',\r\n  styleUrls: ['./palliative-search.component.css']\r\n})\r\nexport class PalliativeSearchComponent implements OnInit {\r\n  palliatives$: Observable<Palliative[]>;\r\n  private searchTerms = new Subject<string>();\r\n\r\n  constructor(private palliativeService: PalliativeService) { }\r\n\r\n  ngOnInit() {\r\n    this.palliatives$ = this.searchTerms.pipe(\r\n      // wait 300ms after each keystroke before considering the term\r\n      debounceTime(300),\r\n      // ignore new term if same as previous term,\r\n      distinctUntilChanged(),\r\n      // switch to new search observable each time the term changes\r\n      switchMap((term: string) =>\r\n        this.palliativeService.searchPalliatives(term))\r\n    );\r\n  }\r\n\r\n  search(term: string): void {\r\n    this.searchTerms.next(term);\r\n  }\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { Observable, of } from 'rxjs';\r\nimport { catchError, map, tap } from 'rxjs/operators';\r\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\r\nimport { MessageService } from '../messages/message.service';\r\nimport { Palliative } from './palliative';\r\nimport { PalliativesUrl, DevServiceUrl, PhpServiceUrl, BaseServiceUrl } from '../serviceUrls';\r\n\r\nconst httpOptions = {\r\n  headers: new HttpHeaders({ 'Content-Type': 'application/json' })\r\n};\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class PalliativeService {\r\n  private serviceUrl = '';\r\n\r\n  constructor(\r\n    private http: HttpClient,\r\n    private messageService: MessageService\r\n  ) {\r\n    let url: string = window.location.href;\r\n    if (url.search(/localhost/) >= 0) {\r\n      this.serviceUrl = DevServiceUrl + PhpServiceUrl + PalliativesUrl;\r\n    } else {\r\n      this.serviceUrl = BaseServiceUrl + PhpServiceUrl + PalliativesUrl;\r\n    }\r\n  }\r\n\r\n  getPalliative(id: number): Observable<Palliative> {\r\n    const url = `${this.serviceUrl}/${id}`;\r\n    return this.http.get<Palliative>(url).pipe(\r\n      // tap(_ => this.log(`fetched palliative id=${id}`)),\r\n      catchError(this.handleError<Palliative>(`getPalliative id=${id}`))\r\n    );\r\n  }\r\n\r\n  getPalliatives(): Observable<Palliative[]> {\r\n    return this.http.get<Palliative[]>(this.serviceUrl)\r\n      .pipe(\r\n        // tap(palliatives => this.log('fetched palliatives')),\r\n        catchError(this.handleError('getPalliatives', []))\r\n      );\r\n  }\r\n\r\n  /** PUT: update the palliative on the server */\r\n  updatePalliative(palliative: Palliative): Observable<any> {\r\n    return this.http.put(this.serviceUrl + `/${palliative.id}`, palliative, httpOptions).pipe(\r\n      tap(_ => this.log(`updated palliative id=${palliative.id}`)),\r\n      catchError(this.handleError<any>('updatePalliative'))\r\n    );\r\n  }\r\n\r\n  /** POST: add a new palliative to the server */\r\n  addPalliative(palliative: Palliative): Observable<Palliative> {\r\n    return this.http.post<Palliative>(this.serviceUrl, palliative, httpOptions).pipe(\r\n      tap((_palliative: Palliative) => this.log(`added palliative w/ id=${_palliative.id}`)),\r\n      catchError(this.handleError<Palliative>('addPalliative'))\r\n    );\r\n  }\r\n\r\n  /** DELETE: delete the palliative from the server */\r\n  deletePalliative(palliative: Palliative | number): Observable<Palliative> {\r\n    const id = typeof palliative === 'number' ? palliative : palliative.id;\r\n    const url = `${this.serviceUrl}/${id}`;\r\n\r\n    return this.http.delete<Palliative>(url, httpOptions).pipe(\r\n      tap(_ => this.log(`deleted palliative id=${id}`)),\r\n      catchError(this.handleError<Palliative>('deletePalliative'))\r\n    );\r\n  }\r\n\r\n  /** GET palliatives whose name contains search term */\r\n  searchPalliatives(term: string): Observable<Palliative[]> {\r\n    if (!term.trim()) {\r\n      // if not search term, return empty palliative array\r\n      return of([]);\r\n    }\r\n    return this.http.get<Palliative[]>(`${this.serviceUrl}/?shortname=${term}`)\r\n      .pipe(\r\n        // tap(_ => this.log(`found palliatives matching \"${term}\"`)),\r\n        catchError(this.handleError<Palliative[]>('searchPalliatives', []))\r\n      );\r\n  }\r\n\r\n  /**\r\n   * Handle Http operation that failed.\r\n   * Let the app continue.\r\n   * @param operation - name of the operation that failed\r\n   * @param result - optional value to return as the observable result\r\n   */\r\n  private handleError<T>(operation = 'operation', result?: T) {\r\n    return (error: any): Observable<T> => {\r\n\r\n      // TODO: send the error to remote logging infrastructure\r\n      console.error(error); // log to console instead\r\n\r\n      // TODO: better job of transforming error for palliative consumption\r\n      this.log(`${operation} failed: ${error.message}`);\r\n\r\n      // Let the app keep running by returning an empty result.\r\n      return of(result as T);\r\n    };\r\n  }\r\n\r\n  // Log a PalliativeService message with the MessageService\r\n  private log(message: string) {\r\n    this.messageService.add(`PalliativeService: ${message}`);\r\n  }\r\n}\r\n","\r\nexport enum DustColumnGraphType {\r\n    Concentration,\r\n    LnC,\r\n    dCdt,\r\n    Deriv1,\r\n    Deriv2,\r\n    RSQ\r\n}\r\n\r\nexport class DustColumnGraph {\r\n    x: number[] = [];\r\n    y: number[] = [];\r\n\r\n    constructor(\r\n        public mode: string = 'lines',\r\n        public type: string = 'scatter'\r\n    ) { }\r\n}\r\n\r\nexport class DustColumnDataPoint {\r\n\r\n    constructor(\r\n        public t: number = 0,   // time in seconds\r\n        public C: number = 0    // concentration in PM10 (coarse particles between 2.5 and 10 micrometers in diameter)\r\n    ) { }\r\n\r\n    lnC = 0;\r\n    slope = 0;\r\n    intercept = 0;\r\n    deriv1 = 0;\r\n    deriv2 = 0;\r\n    dCdt = 0;\r\n    rsq = 0;\r\n    tau = 0;\r\n\r\n    clone(): DustColumnDataPoint {\r\n        return new DustColumnDataPoint(this.t, this.C);\r\n    }\r\n\r\n    copy(v: DustColumnDataPoint) {\r\n        this.t = v.t;\r\n        this.C = v.C;\r\n        return this;\r\n    }\r\n\r\n    static createFromJSON(json: any): DustColumnDataPoint {\r\n        let p = new DustColumnDataPoint();\r\n        p.t = json.t;\r\n        p.C = json.C;\r\n        p.lnC = json.lnC;\r\n        p.slope = json.slope;\r\n        p.intercept = json.intercept;\r\n        p.deriv1 = json.deriv1;\r\n        p.deriv2 = json.deriv2;\r\n        p.dCdt = json.dCdt;\r\n        p.rsq = json.rsq;\r\n        p.tau = json.tau;\r\n        return p;\r\n    }\r\n\r\n    static lerp(a: DustColumnDataPoint, b: DustColumnDataPoint, x: number) {\r\n        return new DustColumnDataPoint(\r\n            x * a.t + (1 - x) * b.t,\r\n            x * a.C + (1 - x) * b.C\r\n        );\r\n    }\r\n}\r\n\r\n// class MPRTPoint {\r\n//     lnC = 0;\r\n//     slope = 0;\r\n//     intercept = 0;\r\n//     deriv1 = 0;\r\n//     deriv2 = 0;\r\n//     dCdt = 0;\r\n//     rsq = 0;\r\n//     tau = 0;\r\n\r\n//     constructor(\r\n//         public t: number = 0,\r\n//         public C: number = 0\r\n//     ) {\r\n//         this.lnC = Math.log(C);\r\n//     }\r\n// }\r\n\r\nfunction mean(Xs: number[]): number {\r\n    let a = 0;\r\n    for (let x of Xs) a += x;\r\n    return a / Xs.length;\r\n}\r\n\r\n/**\r\n * Calculate the slope of the linear regression line.\r\n * @param knownYs \r\n * @param knownXs \r\n */\r\nfunction regressionSlope(knownYs: number[], knownXs: number[]): number {\r\n    if (knownXs.length != knownYs.length) return 0.0;\r\n    if (knownXs.length < 1) return 0.0;\r\n    let count = knownXs.length;\r\n\r\n    let meanX = mean(knownXs);\r\n    let meanY = mean(knownYs);\r\n\r\n    let num = 0;\r\n    let den = 0;\r\n    for (let i = 0; i < count; i++) {\r\n        let x = knownXs[i];\r\n        let y = knownYs[i];\r\n        num += (x - meanX) * (y - meanY);\r\n        den += (x - meanX) * (x - meanX);\r\n    }\r\n\r\n    return num / den;\r\n}\r\n\r\nfunction regressionIntercept(knownYs: number[], knownXs: number[]): number {\r\n    if (knownXs.length != knownYs.length) return 0.0;\r\n    if (knownXs.length < 1) return 0.0;\r\n    let count = knownXs.length;\r\n\r\n    let meanX = mean(knownXs);\r\n    let meanY = mean(knownYs);\r\n\r\n    let num = 0;\r\n    let den = 0;\r\n    for (let i = 0; i < count; i++) {\r\n        let x = knownXs[i];\r\n        let y = knownYs[i];\r\n        num += (x - meanX) * (y - meanY);\r\n        den += (x - meanX) * (x - meanX);\r\n    }\r\n    let b = num / den;\r\n\r\n    return meanY - b * meanX;\r\n}\r\n\r\n// Pearson product-moment correlation coefficient\r\nfunction RSQ(knownYs: number[], knownXs: number[]): number {\r\n    if (knownXs.length != knownYs.length) return 0.0;\r\n    if (knownXs.length < 1) return 0.0;\r\n    let count = knownXs.length;\r\n\r\n    let meanX = mean(knownXs);\r\n    let meanY = mean(knownYs);\r\n\r\n    let num = 0;\r\n    let denx = 0;\r\n    let deny = 0;\r\n    for (let i = 0; i < count; i++) {\r\n        let x = knownXs[i];\r\n        let y = knownYs[i];\r\n        num += (x - meanX) * (y - meanY);\r\n        denx += (x - meanX) * (x - meanX);\r\n        deny += (y - meanY) * (y - meanY);\r\n    }\r\n    return num / Math.sqrt(denx * deny);\r\n}\r\n\r\nexport class Palliative {\r\n    id: number;\r\n    userid: number;\r\n    shortname: string;\r\n    longname: string;\r\n    description: string;\r\n    data: DustColumnDataPoint[] = [];\r\n    mprt: number;\r\n    mprtTime: number;\r\n\r\n    static CreateFromJSON(palliative: any): Palliative {\r\n        let p = new Palliative();\r\n        p.id = palliative.id;\r\n        p.userid = palliative.userid;\r\n        p.shortname = palliative.shortname;\r\n        p.longname = palliative.longname;\r\n        p.description = palliative.description;\r\n        p.data = [];\r\n        if (palliative.data) {\r\n            for (let dcp of palliative.data) {\r\n                p.data.push(DustColumnDataPoint.createFromJSON(dcp));\r\n            }    \r\n        }\r\n        p.mprt = palliative.mprt;\r\n        p.mprtTime = palliative.mprtTime;\r\n        return p;\r\n    }\r\n\r\n    cleanData() {\r\n        let points: DustColumnDataPoint[] = [];\r\n        const MaxSeconds = 59;\r\n        for (let i = 0; i <= MaxSeconds; i++) {\r\n            points.push(new DustColumnDataPoint());\r\n        }\r\n\r\n        for (let e of this.data) {\r\n            if (typeof e.t !== 'number') e.t = parseFloat(e.t);\r\n            if (typeof e.C !== 'number') e.C = parseFloat(e.C);\r\n        }\r\n\r\n        this.data.sort((a: DustColumnDataPoint, b: DustColumnDataPoint) => {\r\n            return a.t - b.t;\r\n        });\r\n        // remove duplicates and outsiders\r\n        let uniq: DustColumnDataPoint[] = [];\r\n        let last = -1;\r\n        for (let e of this.data) {\r\n            if (e.t < 0) continue;\r\n            if (e.t > 59) continue;\r\n            if (e.t == last) continue;\r\n            last = e.t;\r\n            uniq.push(e);\r\n        }\r\n        this.data = uniq;\r\n\r\n        console.log(this.data.length);\r\n        let j = 0;\r\n        for (let i = 0; i <= MaxSeconds; i++) {\r\n            let t = i;\r\n            let a = this.data[j].clone();\r\n            let b = this.data[j + 1].clone();\r\n            if (j == 0 && this.data[j].t > t) {\r\n                points[i].t = t;\r\n                points[i].C = a.C;\r\n                console.log('pre: ', j, points[i]);\r\n            } else if (j == this.data.length - 1 && b.t <= t) {\r\n                points[i].t = t;\r\n                points[i].C = b.C;\r\n                console.log('post: ', j, points[i]);\r\n            } else {\r\n                // skip forward until we have the right two samples    \r\n                while (j < this.data.length - 2 && b.t < t) {\r\n                    j++;\r\n                    a = this.data[j].clone();\r\n                    b = this.data[j + 1].clone();\r\n                    if (j >= this.data.length - 2) break;\r\n                }\r\n                if (b.t >= t) {\r\n                    let dt = b.t - a.t;\r\n                    let dC = b.C - a.C;\r\n                    let slope = dC / dt;\r\n                    let delta = t - a.t;\r\n                    points[i].t = t;\r\n                    points[i].C = a.C + delta * slope;\r\n                } else {\r\n                    points[i].t = t;\r\n                    points[i].C = b.C;\r\n                }\r\n                console.log('lerp: ', j, points[i]);\r\n            }\r\n        }\r\n        this.data = points;\r\n    }\r\n\r\n    calcMPRT() {\r\n        const MaxSeconds = 59;\r\n\r\n        let i = 0;\r\n        for (let p of this.data) {\r\n            if (p.t != i) break;\r\n            i++;\r\n        }\r\n\r\n        this.mprt = -1;\r\n        this.mprtTime = -1;\r\n        if (i != 60) {\r\n            return false;\r\n        }\r\n\r\n        let knownXs: number[] = [];\r\n        let knownYs: number[] = [];\r\n        let foundTau = false;\r\n        for (let i = 0; i <= MaxSeconds; i++) {\r\n            let p = this.data[i];\r\n            p.lnC = Math.log(p.C);\r\n            knownXs.push(p.t);\r\n            knownYs.push(p.lnC);\r\n            p.slope = regressionSlope(knownYs, knownXs);\r\n            p.intercept = regressionIntercept(knownYs, knownXs);\r\n            p.deriv1 = Math.abs(Math.exp(p.intercept) * p.slope);\r\n            p.deriv2 = p.deriv1 * Math.abs(p.slope * Math.exp(p.slope * p.t));\r\n            p.dCdt = Math.abs(Math.exp(p.intercept) * p.slope * Math.exp(p.slope * p.t));\r\n            p.rsq = Math.pow(RSQ(knownYs, knownXs), 2);\r\n            p.tau = Math.abs(1 / p.slope);\r\n\r\n            if (i < 6) continue;\r\n\r\n            // 0.001 mg/m^3/s^2\r\n            if (!foundTau && p.deriv2 < 0.001) {\r\n                this.mprt = p.tau;\r\n                this.mprtTime = p.t;\r\n                foundTau = true;\r\n            }\r\n        }\r\n\r\n        return true;\r\n    }\r\n\r\n    importFromCSV(data: string) {\r\n        // split using regex any sequence of 1 or more newlines or carriage returns\r\n        let splitLines: string[][] = [];\r\n        let lines = data.split(/[\\n\\r]+/);\r\n        for (let line of lines) {\r\n            // split with either white space or commas\r\n            let unfilteredTokens = line.split(/[,\\s]+/);\r\n            if (unfilteredTokens.length > 0 && unfilteredTokens[0][0] == '#') continue;\r\n            let tokens: string[] = [];\r\n            for (let t of unfilteredTokens) {\r\n                if (t.length > 0) {\r\n                    tokens.push(t);\r\n                }\r\n            }\r\n            if (tokens.length == 0) {\r\n                continue;\r\n            }\r\n\r\n            splitLines.push(tokens);\r\n        }\r\n\r\n        // tokens should be numbers t and then C\r\n        // we skip every line when the first two tokens are not numbers\r\n        let i = 0;\r\n        this.data = [];\r\n        for (let line of splitLines) {\r\n            if (line.length >= 2) {\r\n                let t = +line[0];\r\n                let C = +line[1];\r\n                if (isNaN(t) || isNaN(C)) continue;\r\n                this.data.push(new DustColumnDataPoint(t, C));\r\n            }\r\n        }\r\n    }\r\n\r\n    getXYs(whichType: DustColumnGraphType, mode: string = 'lines', type: string = 'scatter'): DustColumnGraph[] {\r\n        let dcgd = new DustColumnGraph(mode, type);\r\n        for (let p of this.data) {\r\n            let x = p.t;\r\n            let y = 0;\r\n            switch (whichType) {\r\n                case DustColumnGraphType.Concentration:\r\n                    y = p.C;\r\n                    break;\r\n                case DustColumnGraphType.LnC:\r\n                    y = p.lnC;\r\n                    break;\r\n                case DustColumnGraphType.Deriv1:\r\n                    y = p.deriv1;\r\n                    break;\r\n                case DustColumnGraphType.Deriv2:\r\n                    y = p.deriv2;\r\n                    break;\r\n                case DustColumnGraphType.dCdt:\r\n                    y = p.dCdt;\r\n                    break;\r\n                case DustColumnGraphType.RSQ:\r\n                    y = p.rsq;\r\n                    break;\r\n                default:\r\n                    y = 0;\r\n            }\r\n            dcgd.x.push(x);\r\n            dcgd.y.push(y);\r\n        }\r\n        let linearRegression = new DustColumnGraph(mode, type);\r\n        if (whichType == DustColumnGraphType.LnC) {\r\n            let slope = 0;\r\n            let intercept = 0;\r\n            for (let i = 0; i <= this.data.length; i++) {\r\n                if (this.data[i].t > this.mprtTime) break;\r\n                slope = this.data[i].slope;\r\n                intercept = this.data[i].intercept;\r\n            }\r\n            for (let i = 0; i <= this.data.length; i++) {\r\n                if (this.data[i].t > this.mprtTime) break;\r\n                linearRegression.x.push(this.data[i].t);\r\n                linearRegression.y.push(intercept + slope * this.data[i].t);\r\n            }\r\n            return [dcgd, linearRegression];\r\n        }\r\n        return [dcgd];\r\n    }\r\n\r\n    getLayout(whichType: DustColumnGraphType): any {\r\n        let layout = {\r\n            xaxis: {\r\n                title: 'time (t)'\r\n            },\r\n            yaxis: {\r\n                title: 'Concentration (C)'\r\n            },\r\n            title: 'Mean Particle Residence Time'\r\n        };\r\n\r\n        switch (whichType) {\r\n            case DustColumnGraphType.Concentration:\r\n                layout.xaxis.title = 'Time (s)';\r\n                layout.yaxis.title = 'Concentration (mg/m³)';\r\n                layout.title = 'Mean Particle Residence Time τ';\r\n                break;\r\n            case DustColumnGraphType.LnC:\r\n                layout.xaxis.title = 'Time (s)';\r\n                layout.yaxis.title = 'Ln(C)';\r\n                layout.title = 'Mean Particle Residence Time τ';\r\n                break;\r\n            case DustColumnGraphType.Deriv1:\r\n                layout.xaxis.title = 'Time (s)';\r\n                layout.yaxis.title = 'Concentration (mg/m³/s)';\r\n                layout.title = 'Rate of Change in Concentration';\r\n                break;\r\n            case DustColumnGraphType.Deriv2:\r\n                layout.xaxis.title = 'Time (s)';\r\n                layout.yaxis.title = 'Concentration (mg/m³/s²)';\r\n                layout.title = 'Rate of Reduction in Rate of Concentration Change';\r\n                break;\r\n            case DustColumnGraphType.dCdt:\r\n                layout.xaxis.title = 'Time (s)';\r\n                layout.yaxis.title = 'Concentration (mg/m³/s)';\r\n                layout.title = 'Rate of Change in Concentration';\r\n                break;\r\n            case DustColumnGraphType.RSQ:\r\n                layout.xaxis.title = 'Time (s)';\r\n                layout.yaxis.title = 'R²';\r\n                layout.title = 'R²';\r\n                break;\r\n        }\r\n        return layout;\r\n    }\r\n}\r\n","import { NgModule } from '@angular/core';\r\nimport { RouterModule, Routes, Router } from '@angular/router';\r\n\r\nimport { PalliativeListComponent } from './palliative-list/palliative-list.component';\r\nimport { PalliativeDetailComponent } from './palliative-detail/palliative-detail.component';\r\n\r\nconst palliativesRoutes: Routes = [\r\n    { path: 'palliatives', component: PalliativeListComponent },\r\n    { path: 'palliatives/detail/:id', component: PalliativeDetailComponent },\r\n];\r\n\r\n@NgModule({\r\n    imports: [\r\n        RouterModule.forChild(palliativesRoutes)\r\n    ],\r\n    exports: [\r\n        RouterModule\r\n    ]\r\n})\r\nexport class PalliativesRoutingModule { }\r\n","\r\n\r\nexport const UsersUrl = '/users';\r\nexport const PalliativesUrl = '/palliatives';\r\nexport const AuthUrl = '/auth';\r\nexport const PhpServiceUrl = '/dust.php';\r\nexport const PhpAdminUrl = '/admin.php';\r\nexport const BaseServiceUrl = 'https://uafdust.azurewebsites.net';\r\nexport const DevServiceUrl = 'http://localhost:8000';","module.exports = \"/* DetailComponent's private CSS styles */\\r\\n\\r\\n\"","module.exports = \"<div *ngIf=\\\"user$ | async as user\\\">\\r\\n\\r\\n  <h3>{{theUser.username | uppercase}} Details</h3>\\r\\n  <div><span>id: {{theUser.id}}</span></div>\\r\\n  <!-- <div><span>Name: {{theUser.firstname}} {{theUser.lastname}}</span></div>\\r\\n  <div><span>Organization: {{theUser.organization}}</span></div>\\r\\n  <div><span>Email: {{theUser.email}}</span></div> -->\\r\\n  \\r\\n  <div><label>First name:<input [(ngModel)]=\\\"theUser.firstname\\\" placeholder=\\\"firstname\\\"></label></div>\\r\\n  <div><label>Last name:<input [(ngModel)]=\\\"theUser.lastname\\\" placeholder=\\\"lastname\\\"></label></div>\\r\\n  <div><label>Organization:<input [(ngModel)]=\\\"theUser.organization\\\" placeholder=\\\"organization\\\"></label></div>\\r\\n  <div><label>Email:<input [(ngModel)]=\\\"theUser.email\\\" placeholder=\\\"email\\\"></label></div>\\r\\n  \\r\\n  <button *ngIf=\\\"authService.isAdmin\\\" (click)=\\\"save()\\\">save</button>\\r\\n  <button (click)=\\\"goBack()\\\">go back</button>\\r\\n  <!-- <button (click)=\\\"gotoUsers(user)\\\">go to users</button> -->\\r\\n</div>\"","import { Component, OnInit, Input } from '@angular/core';\r\nimport { ActivatedRoute, Router, ParamMap } from '@angular/router';\r\nimport { Location } from '@angular/common';\r\nimport { Observable } from 'rxjs';\r\n\r\nimport { User } from '../user';\r\nimport { UserService } from '../user.service';\r\nimport { AuthService } from '../../auth.service';\r\n\r\n@Component({\r\n  selector: 'app-user-detail',\r\n  templateUrl: './user-detail.component.html',\r\n  styleUrls: ['./user-detail.component.css']\r\n})\r\nexport class UserDetailComponent implements OnInit {\r\n  @Input() user: User;\r\n  user$: Observable<User>;\r\n  theUser: User;\r\n\r\n  constructor(\r\n    private route: ActivatedRoute,\r\n    private router: Router,\r\n    private service: UserService,\r\n    private location: Location,\r\n    private authService: AuthService\r\n  ) { }\r\n\r\n  ngOnInit() {\r\n    const id = +this.route.snapshot.paramMap.get('id');\r\n    this.user$ = this.service.getUser(id);\r\n    this.user$.subscribe(user => {\r\n      this.theUser = user;\r\n    });\r\n  }\r\n\r\n  getUser(): void {\r\n    const id = +this.route.snapshot.paramMap.get('id');\r\n    this.service.getUser(id).subscribe(user => this.theUser = user);\r\n  }\r\n\r\n  save(): void {\r\n    this.service.updateUser(this.theUser)\r\n      .subscribe(() => {\r\n        this.getUser();\r\n      });\r\n  }\r\n\r\n  gotoUsers(user: User) {\r\n    const userId = user ? user.id : null;\r\n    this.router.navigate(['/users', { id: userId } ]);\r\n  }\r\n\r\n  goBack() {\r\n    this.router.navigate(['/users', { id: this.theUser.id } ]);\r\n  }\r\n\r\n  // goBack(): void {\r\n  //   this.location.back();\r\n  // }\r\n}\r\n","module.exports = \"\"","module.exports = \"<h1>Users<span *ngIf=\\\"authService.isAdmin\\\"> Administration</span></h1>\\r\\n\\r\\n<div *ngIf=\\\"authService.isAdmin\\\">\\r\\n  <label>User name:\\r\\n    <input #userName />\\r\\n  </label>&nbsp;\\r\\n  <!-- (click) passes input value to add() and then clears the input -->\\r\\n  <button (click)=\\\"add(userName.value); userName.value=''\\\">\\r\\n    add\\r\\n  </button>\\r\\n</div>\\r\\n\\r\\n<ul class=\\\"items\\\">\\r\\n  <li *ngFor=\\\"let user of users$ | async\\\"\\r\\n  [class.selected]=\\\"user.id === selectedId\\\"\\r\\n  >\\r\\n    <a routerLink=\\\"/users/detail/{{user.id}}\\\">\\r\\n      <span class=\\\"badge\\\">{{user.id}}</span> {{user.username}}</a>\\r\\n      <button *ngIf=\\\"authService.isAdmin\\\" class=\\\"delete\\\" title=\\\"delete user\\\" (click)=\\\"delete(user)\\\">x</button>\\r\\n  </li>\\r\\n</ul>\\r\\n\\r\\n<!-- <app-user-detail [user]=\\\"selectedUser\\\"></app-user-detail> -->\\r\\n\"","import { Component, OnInit } from '@angular/core';\r\nimport { ActivatedRoute, ParamMap } from '@angular/router';\r\nimport { Observable } from 'rxjs';\r\nimport { switchMap } from 'rxjs/operators';\r\n\r\nimport { User } from '../user';\r\nimport { UserService } from '../user.service';\r\nimport { AuthService } from '../../auth.service';\r\n\r\n@Component({\r\n  selector: 'app-user-list',\r\n  templateUrl: './user-list.component.html',\r\n  styleUrls: ['./user-list.component.css']\r\n})\r\nexport class UserListComponent implements OnInit {\r\n  theUsers: User[];\r\n  users$: Observable<User[]>;\r\n  private selectedId: number;\r\n\r\n  constructor(\r\n    private service: UserService,\r\n    private route: ActivatedRoute,\r\n    private authService: AuthService\r\n  ) { }\r\n\r\n  ngOnInit() {\r\n    this.getUsers();\r\n    // this.users$ = this.route.paramMap.pipe(\r\n    //   switchMap((params: ParamMap) => {\r\n    //     // + causes the returned string to be converted to a number\r\n    //     this.selectedId = +params.get('id');\r\n    //     return this.service.getUsers();\r\n    //   })\r\n    // );\r\n  }\r\n\r\n  add(name: string): void {\r\n    name = name.trim();\r\n    if (!name) { return; }\r\n    this.service.addUser({ id: null, username: name } as User)\r\n      .subscribe(user => {\r\n        this.getUsers();\r\n      });\r\n  }\r\n\r\n  delete(user: User): void {\r\n    this.theUsers = this.theUsers.filter(h => h !== user);\r\n    this.service.deleteUser(user).subscribe(() => {\r\n      this.getUsers();\r\n    });\r\n  }\r\n\r\n  getUsers(): void {\r\n    this.users$ = this.route.paramMap.pipe(\r\n      switchMap((params: ParamMap) => {\r\n        // + causes the returned string to be converted to a number\r\n        this.selectedId = +params.get('id');\r\n        return this.service.getUsers();\r\n      })\r\n    );\r\n    this.users$.subscribe(users => this.theUsers = users);\r\n    // this.service.getUsers().subscribe(users => this.theUsers = users);\r\n  }\r\n}\r\n\r\n","module.exports = \"/* UserSearch private styles */\\r\\n.search-result li {\\r\\n    border-bottom: 1px solid gray;\\r\\n    border-left: 1px solid gray;\\r\\n    border-right: 1px solid gray;\\r\\n    width:195px;\\r\\n    height: 16px;\\r\\n    padding: 5px;\\r\\n    background-color: white;\\r\\n    cursor: pointer;\\r\\n    list-style-type: none;\\r\\n  }\\r\\n.search-result li:hover {\\r\\n    background-color: #607D8B;\\r\\n  }\\r\\n.search-result li a {\\r\\n    color: #888;\\r\\n    display: block;\\r\\n    text-decoration: none;\\r\\n  }\\r\\n.search-result li a:hover {\\r\\n    color: white;\\r\\n  }\\r\\n.search-result li a:active {\\r\\n    color: white;\\r\\n  }\\r\\n#search-box {\\r\\n    width: 200px;\\r\\n    height: 20px;\\r\\n  }\\r\\nul.search-result {\\r\\n    margin-top: 0;\\r\\n    padding-left: 0;\\r\\n  }\"","module.exports = \"<div id=\\\"search-component\\\">\\r\\n  <h4>User Search</h4>\\r\\n\\r\\n  <input #searchBox id=\\\"search-box\\\" (keyup)=\\\"search(searchBox.value)\\\" />\\r\\n\\r\\n  <ul class=\\\"search-result\\\">\\r\\n    <li *ngFor=\\\"let user of users$ | async\\\">\\r\\n      <a routerLink=\\\"/users/detail/{{user.id}}\\\">{{user.username}}</a>\\r\\n    </li>\\r\\n  </ul>\\r\\n</div>\"","import { Component, OnInit } from '@angular/core';\r\nimport { Observable, Subject } from 'rxjs';\r\n\r\nimport {\r\n  debounceTime, distinctUntilChanged, switchMap\r\n} from 'rxjs/operators';\r\n\r\nimport { User } from '../user';\r\nimport { UserService } from '../user.service';\r\n\r\n@Component({\r\n  selector: 'app-user-search',\r\n  templateUrl: './user-search.component.html',\r\n  styleUrls: ['./user-search.component.css']\r\n})\r\nexport class UserSearchComponent implements OnInit {\r\n  users$: Observable<User[]>;\r\n  private searchTerms = new Subject<string>();\r\n\r\n  constructor(private userService: UserService) { }\r\n\r\n  ngOnInit() {\r\n    this.users$ = this.searchTerms.pipe(\r\n      // wait 300ms after each keystroke before considering the term\r\n      debounceTime(300),\r\n      // ignore new term if same as previous term\r\n      distinctUntilChanged(),\r\n      // switch to new search observable each time the term changes\r\n      switchMap((term: string) =>\r\n        this.userService.searchUsers(term))\r\n    );\r\n\r\n  }\r\n\r\n  // Push a search term into the observable stream\r\n  search(term: string): void {\r\n    this.searchTerms.next(term);\r\n  }\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { Router, UrlHandlingStrategy } from '@angular/router';\r\nimport { Observable, of } from 'rxjs';\r\nimport { catchError, map, tap } from 'rxjs/operators';\r\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\r\nimport { BaseServiceUrl, DevServiceUrl, PhpServiceUrl, UsersUrl } from '../serviceUrls';\r\n\r\nimport { User } from './user';\r\nimport { MessageService } from '../messages/message.service';\r\n\r\nconst httpOptions = {\r\n  headers: new HttpHeaders({ 'Content-Type': 'application/json' })\r\n};\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class UserService {\r\n  private serviceUrl = '';\r\n  lastUserId = 0;\r\n\r\n  constructor(\r\n    private http: HttpClient,\r\n    private messageService: MessageService,\r\n    private router: Router\r\n  ) {\r\n    let url: string = window.location.href;\r\n    if (url.search(/localhost/) >= 0) {\r\n      this.serviceUrl = DevServiceUrl + PhpServiceUrl + UsersUrl;\r\n    } else {\r\n      this.serviceUrl = BaseServiceUrl + PhpServiceUrl + UsersUrl;\r\n    }\r\n  }\r\n\r\n  getUser(id: number): Observable<User> {\r\n    // this.messageService.add(`UserService: fetched user id = ${id}`);\r\n    // return of(USERS.find(user => user.id === id));\r\n\r\n    this.lastUserId = id;\r\n    const url = `${this.serviceUrl}/${id}`;\r\n    return this.http.get<User>(url).pipe(\r\n      // tap(_ => this.log(`fetched user id=${id}`)),\r\n      catchError(this.handleError<User>(`getUser id=${id}`))\r\n    );\r\n  }\r\n\r\n  getUsers(): Observable<User[]> {\r\n    // this.messageService.add('UserService: fetched users');\r\n    // return of(USERS);\r\n    return this.http.get<User[]>(this.serviceUrl)\r\n      .pipe(\r\n        // tap(users => this.log('fetched users')),\r\n        catchError(this.handleError('getUsers', []))\r\n      );\r\n  }\r\n\r\n  /** PUT: update the user on the server */\r\n  updateUser(user: User): Observable<any> {\r\n    const id = user.id;\r\n    const url = `${this.serviceUrl}/${id}`;\r\n    return this.http.put(url, user, httpOptions).pipe(\r\n      tap(_ => this.log(`updated user id=${user.id}`)),\r\n      catchError(this.handleError<any>('updateUser'))\r\n    );\r\n  }\r\n\r\n  /** POST: add a new user to the server */\r\n  addUser(user: User): Observable<User> {\r\n    return this.http.post<User>(this.serviceUrl, user, httpOptions).pipe(\r\n      tap((_user: User) => this.log(`added user w/ id=${_user.id}`)),\r\n      catchError(this.handleError<User>('addUser'))\r\n    );\r\n  }\r\n\r\n  /** DELETE: delete the user from the server */\r\n  deleteUser(user: User | number): Observable<User> {\r\n    const id = typeof user === 'number' ? user : user.id;\r\n    const url = `${this.serviceUrl}/${id}`;\r\n\r\n    return this.http.delete<User>(url, httpOptions).pipe(\r\n      tap(_ => this.log(`deleted user id=${id}`)),\r\n      catchError(this.handleError<User>('deleteUser'))\r\n    );\r\n  }\r\n\r\n  /** GET users whose name contains search term */\r\n  searchUsers(term: string): Observable<User[]> {\r\n    if (!term.trim()) {\r\n      // if not search term, return empty user array\r\n      return of([]);\r\n    }\r\n    return this.http.get<User[]>(`${this.serviceUrl}/?name=${term}`)\r\n      .pipe(\r\n        // tap(_ => this.log(`found users matching \"${term}\"`)),\r\n        catchError(this.handleError<User[]>('searchUsers', []))\r\n      );\r\n  }\r\n\r\n  /**\r\n   * Handle Http operation that failed.\r\n   * Let the app continue.\r\n   * @param operation - name of the operation that failed\r\n   * @param result - optional value to return as the observable result\r\n   */\r\n  private handleError<T>(operation = 'operation', result?: T) {\r\n    return (error: any): Observable<T> => {\r\n\r\n      // TODO: send the error to remote logging infrastructure\r\n      console.error(error); // log to console instead\r\n\r\n      // TODO: better job of transforming error for user consumption\r\n      this.log(`${operation} failed: ${error.message}`);\r\n\r\n      // Let the app keep running by returning an empty result.\r\n      return of(result as T);\r\n    };\r\n  }\r\n\r\n  // Log a UserService message with the MessageService\r\n  private log(message: string) {\r\n    this.messageService.add(`UserService: ${message}`);\r\n  }\r\n}\r\n","\r\nexport class User {\r\n    id: number;\r\n    username: string;\r\n    firstname: string;\r\n    lastname: string;\r\n    organization: string;\r\n    email: string;\r\n}\r\n","import { NgModule } from '@angular/core';\r\nimport { RouterModule, Routes, Router } from '@angular/router';\r\n\r\nimport { UserListComponent } from './user-list/user-list.component';\r\nimport { UserDetailComponent } from './user-detail/user-detail.component';\r\n\r\nconst usersRoutes: Routes = [\r\n    { path: 'users', component: UserListComponent },\r\n    { path: 'users/detail/:id', component: UserDetailComponent },\r\n];\r\n\r\n@NgModule({\r\n    imports: [\r\n        RouterModule.forChild(usersRoutes)\r\n    ],\r\n    exports: [\r\n        RouterModule\r\n    ]\r\n})\r\nexport class UsersRoutingModule { }\r\n","// This file can be replaced during build by using the `fileReplacements` array.\r\n// `ng build ---prod` replaces `environment.ts` with `environment.prod.ts`.\r\n// The list of file replacements can be found in `angular.json`.\r\n\r\nexport const environment = {\r\n  production: false\r\n};\r\n\r\n/*\r\n * In development mode, to ignore zone related error stack frames such as\r\n * `zone.run`, `zoneDelegate.invokeTask` for easier debugging, you can\r\n * import the following file, but please comment it out in production mode\r\n * because it will have performance impact when throw error\r\n */\r\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\r\n","import { enableProdMode } from '@angular/core';\r\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\r\n\r\nimport { AppModule } from './app/app.module';\r\nimport { environment } from './environments/environment';\r\n\r\nif (environment.production) {\r\n  enableProdMode();\r\n}\r\n\r\nplatformBrowserDynamic().bootstrapModule(AppModule)\r\n  .catch(err => console.log(err));\r\n"],"sourceRoot":""}