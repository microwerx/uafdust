{"version":3,"sources":["webpack:///./src/$_lazy_route_resource lazy namespace object","webpack:///./src/app/admin/admin-dashboard.component.html","webpack:///./src/app/admin/admin-dashboard.component.ts","webpack:///./src/app/admin/admin-routing.module.ts","webpack:///./src/app/admin/admin.component.css","webpack:///./src/app/admin/admin.component.html","webpack:///./src/app/admin/admin.component.ts","webpack:///./src/app/admin/admin.module.ts","webpack:///./src/app/admin/manage-palliatives.component.html","webpack:///./src/app/admin/manage-palliatives.component.ts","webpack:///./src/app/admin/manage-users.component.html","webpack:///./src/app/admin/manage-users.component.ts","webpack:///./src/app/animations.ts","webpack:///./src/app/app-routing.module.ts","webpack:///./src/app/app.component.css","webpack:///./src/app/app.component.html","webpack:///./src/app/app.component.ts","webpack:///./src/app/app.module.ts","webpack:///./src/app/auth.service.ts","webpack:///./src/app/auth/auth.component.css","webpack:///./src/app/auth/auth.component.html","webpack:///./src/app/auth/auth.component.ts","webpack:///./src/app/dustdb.service.ts","webpack:///./src/app/help/help.component.css","webpack:///./src/app/help/help.component.html","webpack:///./src/app/help/help.component.ts","webpack:///./src/app/home/home.component.css","webpack:///./src/app/home/home.component.html","webpack:///./src/app/home/home.component.ts","webpack:///./src/app/login/login.component.css","webpack:///./src/app/login/login.component.html","webpack:///./src/app/login/login.component.ts","webpack:///./src/app/logout/logout.component.css","webpack:///./src/app/logout/logout.component.html","webpack:///./src/app/logout/logout.component.ts","webpack:///./src/app/messages/message.service.ts","webpack:///./src/app/messages/messages.component.css","webpack:///./src/app/messages/messages.component.html","webpack:///./src/app/messages/messages.component.ts","webpack:///./src/app/not-found.component.ts","webpack:///./src/app/palliative-area/palliative-detail/palliative-detail.component.css","webpack:///./src/app/palliative-area/palliative-detail/palliative-detail.component.html","webpack:///./src/app/palliative-area/palliative-detail/palliative-detail.component.ts","webpack:///./src/app/palliative-area/palliative-list/palliative-list.component.css","webpack:///./src/app/palliative-area/palliative-list/palliative-list.component.html","webpack:///./src/app/palliative-area/palliative-list/palliative-list.component.ts","webpack:///./src/app/palliative-area/palliative-search/palliative-search.component.css","webpack:///./src/app/palliative-area/palliative-search/palliative-search.component.html","webpack:///./src/app/palliative-area/palliative-search/palliative-search.component.ts","webpack:///./src/app/palliative-area/palliative.service.ts","webpack:///./src/app/palliative-area/palliative.ts","webpack:///./src/app/palliative-area/palliatives-routing.component.ts","webpack:///./src/app/serviceUrls.ts","webpack:///./src/app/splashscreen.service.ts","webpack:///./src/app/splashscreen/splashscreen.component.css","webpack:///./src/app/splashscreen/splashscreen.component.html","webpack:///./src/app/splashscreen/splashscreen.component.ts","webpack:///./src/app/user-area/user-detail/user-detail.component.css","webpack:///./src/app/user-area/user-detail/user-detail.component.html","webpack:///./src/app/user-area/user-detail/user-detail.component.ts","webpack:///./src/app/user-area/user-list/user-list.component.css","webpack:///./src/app/user-area/user-list/user-list.component.html","webpack:///./src/app/user-area/user-list/user-list.component.ts","webpack:///./src/app/user-area/user-search/user-search.component.css","webpack:///./src/app/user-area/user-search/user-search.component.html","webpack:///./src/app/user-area/user-search/user-search.component.ts","webpack:///./src/app/user-area/user.service.ts","webpack:///./src/app/user-area/user.ts","webpack:///./src/app/user-area/users-routing.module.ts","webpack:///./src/environments/environment.ts","webpack:///./src/main.ts"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./src/$$_lazy_route_resource lazy recursive\";","module.exports = \"<!-- Admin dashboard...\\n\\n<button (click)=\\\"initializeDB()\\\">initialize database</button> -->\"","import { Component } from '@angular/core';\nimport { Router, ActivatedRoute } from '@angular/router';\n\nimport { DustDBService } from '../dustdb.service';\n\n@Component({\n    selector: 'app-admin-dashboard',\n    templateUrl: 'admin-dashboard.component.html',\n    styleUrls: [ 'admin.component.css' ]\n})\nexport class AdminDashboardComponent {\n    constructor(\n        private dustdbService: DustDBService,\n        private router: Router,\n        private route: ActivatedRoute\n    ) { }\n\n    initializeDB() {\n        this.dustdbService.initializeDB();\n    }\n}\n","import { NgModule } from '@angular/core';\nimport { RouterModule, Routes, Router } from '@angular/router';\n\nimport { AuthGuardService } from '../auth-guard.service';\n\nimport { AdminComponent } from './admin.component';\nimport { ManageUsersComponent } from './manage-users.component';\nimport { ManagePalliativesComponent } from './manage-palliatives.component';\nimport { AdminDashboardComponent } from './admin-dashboard.component';\n\nconst adminRoutes: Routes = [\n    {\n        path: 'admin', component: AdminComponent,\n        // canActivate: [ AuthGuardService ],\n        children: [\n            {\n                path: '',\n                // canActivateChild: [ AuthGuardService ],\n                children: [\n                    { path: 'dashboard', component: AdminDashboardComponent },\n                    { path: 'users', component: ManageUsersComponent },\n                    { path: 'palliatives', component: ManagePalliativesComponent },\n                ]\n            }\n        ]\n    }\n];\n\n@NgModule({\n    imports: [\n        RouterModule.forChild(adminRoutes)\n    ],\n    exports: [\n        RouterModule\n    ]\n})\nexport class AdminRoutingModule { }\n","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2FkbWluL2FkbWluLmNvbXBvbmVudC5jc3MifQ== */\"","module.exports = \"\\n\\n<nav>\\n  <h1>Administration Area</h1>\\n  <!-- <a routerLink=\\\"./dashboard\\\" routerLinkActive=\\\"active\\\"\\n    [routerLinkActiveOptions]=\\\"{ exact: true }\\\">Dashboard</a> -->\\n  <a routerLink=\\\"./palliatives\\\" routerLinkActive=\\\"active\\\">Manage Palliatives</a>\\n  <a routerLink=\\\"./users\\\" routerLinkActive=\\\"active\\\">Manage Users</a>\\n</nav>\\n\\n<router-outlet></router-outlet>\"","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-admin',\n  templateUrl: './admin.component.html',\n  styleUrls: ['./admin.component.css']\n})\nexport class AdminComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { HttpClientModule } from '@angular/common/http';\n\nimport { AdminComponent } from './admin.component';\nimport { AdminDashboardComponent } from './admin-dashboard.component';\nimport { ManageUsersComponent } from './manage-users.component';\nimport { ManagePalliativesComponent } from './manage-palliatives.component';\n\nimport { AdminRoutingModule } from './admin-routing.module';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    AdminRoutingModule,\n    HttpClientModule\n  ],\n  declarations: [\n    AdminComponent,\n    AdminDashboardComponent,\n    ManageUsersComponent,\n    ManagePalliativesComponent\n  ]\n})\nexport class AdminModule { }\n","module.exports = \"<h2>Manage Palliatives</h2>\\n\\n<div *ngIf=\\\"!palliatives$\\\">Loading...</div>\\n\\n<div *ngIf=\\\"palliatives$ | async as palliatives\\\">\\n\\n<!-- <app-palliative-list></app-palliative-list> -->\\n\\n<ul class=\\\"items\\\">\\n    <li *ngFor=\\\"let palliative of palliatives\\\">\\n        <a routerLink=\\\"/palliatives/detail/{{palliative.id}}\\\">\\n        <span class=\\\"badge\\\">{{palliative.id}} | {{palliative.testid}} | </span>{{palliative.shortname}}</a>\\n        <button class=\\\"delete\\\" title=\\\"delete palliative\\\" (click)=\\\"delete(palliative)\\\">x</button>\\n    </li>\\n</ul>\\n</div>\\n\\n\\n<button (click)=\\\"gotoDashboard()\\\">Back to dashboard</button>\\n\"","import { Component, OnInit } from '@angular/core';\nimport { Router, ActivatedRoute, ParamMap } from '@angular/router';\nimport { Observable } from 'rxjs';\nimport { switchMap } from 'rxjs/operators';\n\nimport { UserService } from '../user-area/user.service';\nimport { User } from '../user-area/user';\nimport { PalliativeService } from '../palliative-area/palliative.service';\nimport { Palliative } from '../palliative-area/palliative';\n\n@Component({\n    selector: 'app-admin-manage-palliatives',\n    templateUrl: 'manage-palliatives.component.html',\n    styleUrls: [ 'admin.component.css' ]\n})\nexport class ManagePalliativesComponent implements OnInit {\n    palliatives$: Observable<Palliative[]>;\n    selectedId = 0;\n\n    constructor(\n        private palliativeService: PalliativeService,\n        private userService: UserService,\n        private route: ActivatedRoute,\n        private router: Router\n    ) { }\n\n    ngOnInit() {\n        this.palliatives$ = this.palliativeService.getPalliatives();\n        this.palliatives$ = this.route.paramMap.pipe(\n            switchMap((params: ParamMap) => {\n                this.selectedId = +params.get('id');\n                return this.palliativeService.getPalliatives();\n            })\n        );\n    }\n\n    gotoDashboard() {\n        this.router.navigate([ './' ]);\n    }\n}\n","module.exports = \"<h2>Manage Users</h2>\\n\\n<div *ngIf=\\\"!users$\\\">Loading...</div>\\n<!-- <div *ngIf=\\\"users$ | async as users\\\">\\n    <ul>\\n        <li *ngFor=\\\"let user of users\\\">{{user.username}}</li>\\n    </ul>\\n</div> -->\\n\\n<div *ngIf=\\\"users$\\\">\\n    <label>User name:</label>&nbsp;<input #userName />\\n    \\n    <!-- (click) passes input value to add() and then clears the input -->\\n    <button (click)=\\\"add(userName.value); userName.value=''\\\">\\n        add\\n    </button>\\n\\n    <ul class=\\\"items\\\">\\n    <li *ngFor=\\\"let user of users$ | async\\\"\\n    [class.selected]=\\\"user.id === selectedId\\\"\\n    >\\n      <a routerLink=\\\"/users/detail/{{user.id}}\\\">\\n        <span class=\\\"badge\\\">{{user.id}}</span> {{user.username}}</a>\\n        <button class=\\\"delete\\\" title=\\\"delete user\\\"\\n        (click)=\\\"delete(user)\\\">x</button>\\n    </li>\\n  </ul>\\n</div>\\n\\n\\n<!-- <app-user-list></app-user-list> -->\\n<button (click)=\\\"gotoDashboard()\\\">Back to dashboard</button>\"","import { Component, OnInit } from '@angular/core';\nimport { Router, ActivatedRoute, ParamMap } from '@angular/router';\nimport { Observable } from 'rxjs';\nimport { switchMap } from 'rxjs/operators';\n\nimport { UserService } from '../user-area/user.service';\nimport { User } from '../user-area/user';\n\n@Component({\n    selector: 'app-admin-manage-users',\n    templateUrl: 'manage-users.component.html',\n    styleUrls: [ 'admin.component.css' ],\n})\nexport class ManageUsersComponent implements OnInit {\n    users$: Observable<User[]>;\n    theUsers: User[] = [];\n    selectedId = 0;\n\n    constructor(\n        private service: UserService,\n        private router: Router,\n        private route: ActivatedRoute\n    ) { }\n\n    ngOnInit() {\n        this.getUsers();\n    }\n\n    gotoDashboard() {\n        this.router.navigate([ './' ], );\n    }\n\n    getUsers() {\n        this.users$ = this.route.paramMap.pipe(\n            switchMap((params: ParamMap) => {\n                this.selectedId = +params.get('id');\n                return this.service.getUsers();\n            })\n        );\n        this.users$.subscribe(users => this.theUsers = users);\n    }\n\n    add(name: string): void {\n        name = name.trim();\n        if (!name) { return; }\n        this.service.addUser({ userid: null, username: name } as User)\n          .subscribe(user => {\n              this.getUsers();\n              this.selectedId = user.userid;\n          });\n      }\n    \n    delete(user: User): void {\n        this.theUsers = this.theUsers.filter(h => h !== user);\n        this.service.deleteUser(user).subscribe(() => {\n            this.getUsers();\n        });\n    }\n}\n","import { animate, state, style, transition, trigger } from '@angular/animations';\n\nexport const slideInDownAnimation =\n    trigger('routeAnimation', [\n        state('*',\n            style({\n                opacity: 1,\n                transform: 'translateX(0)'\n            })\n        ),\n        transition(':enter', [\n            style({\n                opacity: 0,\n                transform: 'translateX(-100%)'\n            }),\n            animate('0.2s ease-in')\n        ]),\n        transition(':leave', [\n            animate('0.5s ease-out', style({\n                opacity: 0,\n                transform: 'translateY(100%)'\n            }))\n        ])\n    ]);\n","import { NgModule } from '@angular/core';\nimport { RouterModule, Routes } from '@angular/router';\n\nimport { UserListComponent } from './user-area/user-list/user-list.component';\nimport { UserDetailComponent } from './user-area/user-detail/user-detail.component';\nimport { PalliativeListComponent } from './palliative-area/palliative-list/palliative-list.component';\nimport { PalliativeDetailComponent } from './palliative-area/palliative-detail/palliative-detail.component';\nimport { PageNotFoundComponent } from './not-found.component';\nimport { AuthComponent } from './auth/auth.component';\nimport { LoginComponent } from './login/login.component';\nimport { LogoutComponent } from './logout/logout.component';\nimport { HomeComponent } from './home/home.component';\nimport { HelpComponent } from './help/help.component';\nimport { AuthGuardService } from './auth-guard.service';\n\nconst routes: Routes = [\n  { path: 'home', component: HomeComponent },\n  { path: 'help', component: HelpComponent },\n  { path: 'login', component: LoginComponent, outlet: 'popup' },\n  { path: 'logout', component: LogoutComponent, outlet: 'popup' },\n  { path: '', redirectTo: '/home', pathMatch: 'full' },\n  { path: '**', component: PageNotFoundComponent },\n];\n\n@NgModule({\n  exports: [ RouterModule ],\n  imports: [ RouterModule.forRoot(routes, {onSameUrlNavigation: 'reload'}) ]\n})\nexport class AppRoutingModule { }\n","module.exports = \"/* AppComponent's private CSS styles */\\n\\n/* h1 {\\n  font-size: 1.2em;\\n  color: #999;\\n  margin-bottom: 0;\\n}\\n\\nh2 {\\n  font-size: 2em;\\n  margin-top: 0;\\n  padding-top: 0;\\n} */\\n\\n/* nav a {\\n  padding: 5px 10px;\\n  text-decoration: none;\\n  margin-top: 10px;\\n  display: inline-block;\\n  background-color: #eee;\\n  border-radius: 4px;\\n}\\n\\nnav a:visited,\\na:link {\\n  color: #607d8b;\\n}\\n\\nnav a:hover {\\n  color: #039be5;\\n  background-color: #cfd8dc;\\n}\\n\\nnav a.active {\\n  color: #039be5;\\n} */\\n\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvYXBwLmNvbXBvbmVudC5jc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUEsc0NBQXNDOztBQUV0Qzs7Ozs7Ozs7OztHQVVHOztBQUVIOzs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7R0FxQkciLCJmaWxlIjoic3JjL2FwcC9hcHAuY29tcG9uZW50LmNzcyIsInNvdXJjZXNDb250ZW50IjpbIi8qIEFwcENvbXBvbmVudCdzIHByaXZhdGUgQ1NTIHN0eWxlcyAqL1xuXG4vKiBoMSB7XG4gIGZvbnQtc2l6ZTogMS4yZW07XG4gIGNvbG9yOiAjOTk5O1xuICBtYXJnaW4tYm90dG9tOiAwO1xufVxuXG5oMiB7XG4gIGZvbnQtc2l6ZTogMmVtO1xuICBtYXJnaW4tdG9wOiAwO1xuICBwYWRkaW5nLXRvcDogMDtcbn0gKi9cblxuLyogbmF2IGEge1xuICBwYWRkaW5nOiA1cHggMTBweDtcbiAgdGV4dC1kZWNvcmF0aW9uOiBub25lO1xuICBtYXJnaW4tdG9wOiAxMHB4O1xuICBkaXNwbGF5OiBpbmxpbmUtYmxvY2s7XG4gIGJhY2tncm91bmQtY29sb3I6ICNlZWU7XG4gIGJvcmRlci1yYWRpdXM6IDRweDtcbn1cblxubmF2IGE6dmlzaXRlZCxcbmE6bGluayB7XG4gIGNvbG9yOiAjNjA3ZDhiO1xufVxuXG5uYXYgYTpob3ZlciB7XG4gIGNvbG9yOiAjMDM5YmU1O1xuICBiYWNrZ3JvdW5kLWNvbG9yOiAjY2ZkOGRjO1xufVxuXG5uYXYgYS5hY3RpdmUge1xuICBjb2xvcjogIzAzOWJlNTtcbn0gKi9cbiJdfQ== */\"","module.exports = \"<table class=\\\"branding branding-uaf\\\">\\n  <tr>\\n    <td>\\n      <a href=\\\"http://www.uaf.edu\\\">\\n        <img width=\\\"48px\\\" src=\\\"assets/uaf-logo-web.png\\\" />\\n      </a>\\n    </td>\\n    <td width=\\\"100%\\\">\\n      <div>Alaska University Transportation Center (AUTC)</div>\\n      <div>Institute of Northern Engineering</div>\\n    </td>\\n  </tr>\\n</table>\\n\\n<h1 style=\\\"font-size: 2.62em\\\"><img style=\\\"vertical-align:middle; height: 1.5em;\\\" src=\\\"assets/dust-app-logo.png\\\"/>&nbsp;{{title}}</h1>\\n<nav>\\n  <!-- <a routerLink=\\\"/dashboard\\\">Dashboard</a> -->\\n  <a routerLink=\\\"/home\\\" routerLinkActive=\\\"active\\\">Home</a>\\n  <a routerLink=\\\"/palliatives\\\" routerLinkActive=\\\"active\\\">Palliatives</a>\\n  <!-- <a *ngIf=\\\"authService.isTechnician\\\" routerLink=\\\"/technician\\\" routerLinkActive=\\\"active\\\">Technician</a> -->\\n  <a *ngIf=\\\"authService.isAdmin\\\" routerLink=\\\"/users\\\" routerLinkActive=\\\"active\\\">Users</a>\\n  <!-- <a *ngIf=\\\"authService.isAdmin\\\" routerLink=\\\"/admin\\\" routerLinkActive=\\\"active\\\">Admin</a> -->\\n  <a routerLink=\\\"/help\\\" routerLinkActive=\\\"active\\\">Help</a>\\n\\n  <span *ngIf=\\\"!authService.isLoggedIn\\\"><a [routerLink]=\\\"[{ outlets: { popup: ['login'] } }]\\\" routerLinkActive=\\\"active\\\">Log in</a></span>\\n  <span *ngIf=\\\"authService.isLoggedIn\\\"><a [routerLink]=\\\"[{ outlets: { popup: ['logout'] } }]\\\" routerLinkActive=\\\"active\\\" (click)='authService.logout()'>Log out</a>\\n    Signed in as {{authService.signedInUser}}</span>\\n    <!-- <button (click)=\\\"authService.reconnect()\\\">Reconnect</button> -->\\n</nav>\\n\\n<div class=\\\"popup\\\">\\n  <router-outlet name=\\\"popup\\\">\\n  </router-outlet>\\n</div>\\n\\n<div class=\\\"splashscreen\\\">\\n    <router-outlet name=\\\"popup\\\">\\n      <app-splashscreen></app-splashscreen>\\n    </router-outlet>\\n  </div>\\n\\n<!-- <div *ngIf=\\\"splashscreenService.disclaimerAccepted\\\">Accepted</div>\\n<div *ngIf=\\\"!splashscreenService.disclaimerAccepted\\\">Not Accepted</div> -->\\n\\n<div class=\\\"mainnav\\\" *ngIf=\\\"splashscreenService.disclaimerAccepted\\\"><router-outlet></router-outlet></div>\\n\\n<app-messages></app-messages>\\n\\n<hr/>\\n\\n<table class=\\\"branding branding-cset\\\">\\n    <tr>\\n      <td>\\n        <a href=\\\"http://cset.uaf.edu/\\\">\\n          <img width=\\\"48px\\\" src=\\\"assets/cset-logo-web.png\\\" />\\n        </a>\\n      </td>\\n      <td width=\\\"100%\\\">\\n        <div class=\\\"branding-cset\\\">Center for Safety Equity in Transportation</div>\\n      </td>\\n    </tr>\\n  </table>\"","import { Component, OnInit } from '@angular/core';\nimport { AuthService } from './auth.service';\nimport { SplashscreenService } from './splashscreen.service';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent implements OnInit {\n  title = 'Dust Palliative MPRT Calculator';\n  signedInUser = 'nobody';\n\n  constructor(public authService: AuthService,\n    public splashscreenService: SplashscreenService) { }\n\n  ngOnInit() {\n    this.signedInUser = (this.authService.isLoggedIn ? 'somebody' : 'Log in');\n  }\n}\n","import { BrowserModule } from '@angular/platform-browser';\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\nimport { NgModule } from '@angular/core';\nimport { FormsModule } from '@angular/forms'; // <-- NgModel lives here\nimport { HttpClientModule } from '@angular/common/http';\nimport { HttpClientInMemoryWebApiModule } from 'angular-in-memory-web-api';\nimport { InMemoryDataService } from './in-memory-data.service';\n\nimport { AppComponent } from './app.component';\nimport { MessagesComponent } from './messages/messages.component';\nimport { AppRoutingModule } from './app-routing.module';\n\nimport { UsersRoutingModule } from './user-area/users-routing.module';\nimport { UserListComponent } from './user-area/user-list/user-list.component';\nimport { UserDetailComponent } from './user-area/user-detail/user-detail.component';\nimport { UserSearchComponent } from './user-area/user-search/user-search.component';\n\nimport { PalliativeListComponent } from './palliative-area/palliative-list/palliative-list.component';\nimport { PalliativeDetailComponent } from './palliative-area/palliative-detail/palliative-detail.component';\nimport { PalliativeSearchComponent } from './palliative-area/palliative-search/palliative-search.component';\nimport { PageNotFoundComponent } from './not-found.component';\nimport { PalliativesRoutingModule } from './palliative-area/palliatives-routing.component';\nimport { AdminRoutingModule } from './admin/admin-routing.module';\nimport { AdminModule } from './admin/admin.module';\nimport { LoginComponent } from './login/login.component';\nimport { AuthComponent } from './auth/auth.component';\nimport { LogoutComponent } from './logout/logout.component';\nimport { HelpComponent } from './help/help.component';\nimport { HomeComponent } from './home/home.component';\nimport { SplashscreenComponent } from './splashscreen/splashscreen.component';\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    PageNotFoundComponent,\n    UserListComponent,\n    UserDetailComponent,\n    MessagesComponent,\n    UserSearchComponent,\n    PalliativeListComponent,\n    PalliativeDetailComponent,\n    PalliativeSearchComponent,\n    LoginComponent,\n    AuthComponent,\n    LogoutComponent,\n    HelpComponent,\n    HomeComponent,\n    SplashscreenComponent,\n  ],\n  imports: [\n    BrowserModule,\n    BrowserAnimationsModule,\n    FormsModule,\n    UsersRoutingModule,\n    PalliativesRoutingModule,\n    AdminRoutingModule,\n    AppRoutingModule,\n    AdminModule,\n    HttpClientModule,\n    // The HttpClientInMemoryWebApiModule module intercepts HTTP requests\n    // and returns simulated server responses.\n    // Remove it when a real server is ready to receive requests.\n    // HttpClientInMemoryWebApiModule.forRoot(\n    //   InMemoryDataService, { dataEncapsulation: false }\n    // )\n  ],\n  providers: [],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","import { Injectable } from '@angular/core';\nimport { Observable, of, BehaviorSubject } from 'rxjs';\nimport { catchError, tap, delay, retry, map } from 'rxjs/operators';\nimport { MessageService } from './messages/message.service';\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\nimport { DevServiceUrl, PhpAdminUrl, BaseServiceUrl, PhpServiceUrl } from './serviceUrls';\n\nconst httpOptions = {\n  headers: new HttpHeaders({ 'Content-Type': 'application/json' }),\n};\n\nexport class AuthServiceRequest {\n  constructor(\n    public request = '',\n    public result = ''\n  ) { }\n};\n\nclass AuthReply {\n  constructor(\n    public isloggedin = false,\n    public userid = 0,\n    public username = 'nobody',\n    public userrole = 'nobody',\n    public session = ''\n  ) { }\n}\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class AuthService {\n  isLoggedIn = false;\n  isAdmin = false;\n  isTechnician = false;\n  bisLoggedIn: BehaviorSubject<boolean> = new BehaviorSubject<boolean>(false);\n  signedInUser = 'nobody';\n  signedInUserRole = 'user';\n  signedInUserId = 0;\n  username = '';\n  password = '';\n  session = '';\n  private url = '';\n\n  // store redirect URL\n  redirectUrl: string;\n\n  login(): Observable<any> {\n    let formdata = new FormData();\n    formdata.append('username', this.username);\n    formdata.append('password', this.password);\n    this.password = '';\n    let url = this.url + '?login';\n    return this.http.post<AuthReply>(url, formdata).pipe(\n      // retry(3),\n      map(response => {\n        this.isLoggedIn = response.isloggedin;\n        this.signedInUser = response.username;\n        this.isAdmin = response.userrole == 'admin';\n        this.isTechnician = true;\n        this.signedInUserId = response.userid;\n        this.signedInUserRole = response.userrole;\n        this.session = response.session;\n        this.username = '';\n        this.password = '';\n        this.bisLoggedIn.next(this.isLoggedIn);\n        return true;\n      } ),\n      catchError(this.handleError<AuthReply>(`error logging in with username ${this.username}`))\n    );\n  }\n\n  reset() {\n    this.isLoggedIn = false;\n    this.isAdmin = false;\n    this.isTechnician = false;\n    this.signedInUser = 'nobody';\n    this.signedInUserId = 0;\n    this.signedInUserRole = '';\n    this.username = '';\n    this.password = '';\n  }\n\n  reconnect() {\n    let url = this.url + '?reconnect';\n    if (this.session.length > 0) url += '&token=' + this.session;\n    this.log('Reconnecting');\n    this.http.get(url).subscribe((result: AuthReply) => {\n      console.log(\"reconnect: \");\n      console.log(result)\n      this.session = result.session;\n      this.log('Reconnected');\n    });\n  }\n\n  logout() {\n    let url = this.url + '?logout';\n    this.session = '';\n    this.log('Logging out');\n    this.http.get(url).subscribe(() => {\n      this.reset();\n      this.log('Logged out')\n    });\n  }\n\n  constructor(\n    private http: HttpClient,\n    private messageService: MessageService\n  ) {\n    let url: string = window.location.href;\n    if (url.search(/localhost/) >= 0) {\n      this.url = DevServiceUrl + PhpServiceUrl;\n    } else {\n      this.url = BaseServiceUrl + PhpServiceUrl;\n    }\n  }\n\n  /**\n * Handle Http operation that failed.\n * Let the app continue.\n * @param operation - name of the operation that failed\n * @param result - optional value to return as the observable result\n */\n  private handleError<T>(operation = 'operation', result?: T) {\n    this.reset();\n\n    return (error: any): Observable<T> => {\n\n      // TODO: send the error to remote logging infrastructure\n      console.error(error); // log to console instead\n\n      // TODO: better job of transforming error for user consumption\n      this.log(`${operation} failed: ${error.message}`);\n\n      // Let the app keep running by returning an empty result.\n      return of(result as T);\n    };\n  }\n\n\n  /**\n   * Log a UserService message with the MessageService.\n   * @param message - message to print to message service\n   */\n  private log(message: string) {\n    this.messageService.add(`AuthService: ${message}`);\n  }\n}\n","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2F1dGgvYXV0aC5jb21wb25lbnQuY3NzIn0= */\"","module.exports = \"<p>\\n  auth works!\\n</p>\\n\"","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-auth',\n  templateUrl: './auth.component.html',\n  styleUrls: ['./auth.component.css']\n})\nexport class AuthComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n","import { Injectable } from '@angular/core';\nimport { Observable, of } from 'rxjs';\nimport { catchError, map, tap } from 'rxjs/operators';\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\n\nimport { MessageService } from './messages/message.service';\nimport { DevServiceUrl, PhpAdminUrl, BaseServiceUrl } from './serviceUrls';\n\nconst httpOptions = {\n  headers: new HttpHeaders({ 'Content-Type': 'application/json' })\n};\n\nexport class DustDBServiceRequest {\n  constructor(\n    public request = '',\n    public result = '',\n    public token = ''\n  ) { }\n};\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class DustDBService {\n  private url = '';\n\n  constructor(\n    private http: HttpClient,\n    private messageService: MessageService\n  ) {\n    let url: string = window.location.href;\n    if (url.search(/localhost/) >= 0) {\n      this.url = DevServiceUrl + PhpAdminUrl;\n    } else {\n      this.url = BaseServiceUrl + PhpAdminUrl;\n    }\n  }\n\n  /**\n   * Send POST message to initialize database\n   * This will probably be deprecated as soon as other services are finalized.\n   */\n  initializeDB() {\n    this.log('POSTing initialize request');\n    let status = new DustDBServiceRequest('initialize');\n    this.http.post<DustDBServiceRequest>(this.url, status, httpOptions).pipe(\n      tap((status: DustDBServiceRequest) => this.log(`${this.url} replied with ${status.result}`)),\n      catchError(this.handleError<DustDBServiceRequest>('initializeDB'))\n    );\n  }\n\n  /**\n   * Handle Http operation that failed.\n   * Let the app continue.\n   * @param operation - name of the operation that failed\n   * @param result - optional value to return as the observable result\n   */\n  private handleError<T>(operation = 'operation', result?: T) {\n    return (error: any): Observable<T> => {\n\n      // TODO: send the error to remote logging infrastructure\n      console.error(error); // log to console instead\n\n      // TODO: better job of transforming error for user consumption\n      this.log(`${operation} failed: ${error.message}`);\n\n      // Let the app keep running by returning an empty result.\n      return of(result as T);\n    };\n  }\n\n  /**\n   * Log a UserService message with the MessageService.\n   * @param message - message to print to message service\n   */\n  private log(message: string) {\n    this.messageService.add(`DustDBService: ${message}`);\n  }\n}\n","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2hlbHAvaGVscC5jb21wb25lbnQuY3NzIn0= */\"","module.exports = \"<div class=\\\"wrap\\\">\\n\\n  <h1 id=\\\"how-to-use-this-webpage\\\">How to use this webpage</h1>\\n  <h2 id=\\\"finding-out-whether-a-palliative-has-been-tested\\\">Finding out whether a palliative has been tested</h2>\\n  <ol>\\n    <li>Under palliatves, click on the palliative you would like to know more about. If it is not listed, it has not been tested\\n      yet.</li>\\n  </ol>\\n  <h2 id=\\\"calculating-palliative-effectiveness\\\">Calculating palliative effectiveness</h2>\\n  <ol>\\n    <li>As a technician, you may log in to add a palliative to the database.</li>\\n    <li>Go to the palliatives tab, type the name of the new palliative and click add.</li>\\n    <li>Click on the newly created entry and add the details about the palliative you tested.</li>\\n    <li>Submit the time in seconds and dust concentrations in the table, or choose to import a csv. Click submit. Your mean particle\\n      residence time will be calculated and graphed.</li>\\n  </ol>\\n  <h2 id=\\\"admin\\\">Admin</h2>\\n  <ol>\\n    <li>As an administrator, log in to manage database items.</li>\\n    <li>To edit, add, or delete database items visit the Palliatiaves and Users pages. Little 'x' buttons will be added for deletion\\n      operations.</li>\\n  </ol>\\n\\n</div>\\n\"","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-help',\n  templateUrl: './help.component.html',\n  styleUrls: ['./help.component.css']\n})\nexport class HelpComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2hvbWUvaG9tZS5jb21wb25lbnQuY3NzIn0= */\"","module.exports = \"<!-- <app-palliative-search></app-palliative-search> -->\\n\\n<div class=\\\"wrap\\\">\\n    <!-- <h1>About</h1> -->\\n    <p>Welcome to the UAF Dust Palliative MPRT Calculator. It is\\n      designed to calculate the <em>mean particle residence time</em>,\\n      or Greek letter tau <span style=\\\"font-family: serif\\\">&tau;</span>,\\n      of a dust palliative.\\n      This allows us to compare the performance of different palliatives\\n      using a scientifically based test which uses a nephelometer and dustfall\\n      column (shown in figures) to record the time and PM10 concentration for\\n      one minute. The purpose of this website is\\n      to enable technicians to upload test data, calculate the MPRT,\\n      and publish the results of such tests.\\n    </p>\\n    <p>Currently, this website is a <em>proof of concept</em> showing\\n      what we hope to deliver when it is finished.</p>\\n    <figure style=\\\"width: 80%; min-width: 32px; max-width: 300px;\\\">\\n        <img class=scaled src=\\\"assets/dustcolumn-300px.jpg\\\" />\\n        <figcaption>The dustfall column used to test the performance of a palliative.</figcaption>\\n    </figure>\\n    <figure style=\\\"width: 80%; min-width: 32px; max-width: 300px;\\\">\\n        <img class=scaled src=\\\"assets/meter-300px.jpg\\\" />\\n        <figcaption>The nephelometer measures the PM10 concentration over time.</figcaption>\\n    </figure>\\n</div>\\n\"","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-home',\n  templateUrl: './home.component.html',\n  styleUrls: ['./home.component.css']\n})\nexport class HomeComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2xvZ2luL2xvZ2luLmNvbXBvbmVudC5jc3MifQ== */\"","module.exports = \"<div class=\\\"popup padded\\\">\\n    <h3>LOGIN</h3>\\n    <p>{{message}}</p>\\n    <div *ngIf=\\\"!authService.isLoggedIn\\\">\\n      <label>Username:<input [(ngModel)]=\\\"authService.username\\\" placeholder=\\\"username\\\"></label><br/>\\n      <label>Password:<input type=\\\"password\\\" [(ngModel)]=\\\"authService.password\\\" placeholder=\\\"password\\\"></label>\\n    </div>\\n    <p>\\n      <button (click)=\\\"login()\\\" *ngIf=\\\"!authService.isLoggedIn\\\">Login</button>\\n      <button (click)=\\\"logout()\\\" *ngIf=\\\"authService.isLoggedIn\\\">Logout</button>\\n      <button (click)=\\\"cancel()\\\">Cancel</button>\\n    </p>    \\n</div>\\n\"","import { Component, HostBinding, OnInit } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { AuthService } from '../auth.service';\n\nimport { slideInDownAnimation } from '../animations';\n\n@Component({\n  selector: 'app-login',\n  templateUrl: './login.component.html',\n  styleUrls: ['./login.component.css'],\n  animations: [slideInDownAnimation]\n})\nexport class LoginComponent implements OnInit {\n  @HostBinding('@routeAnimation') routeAnimation = true;\n  @HostBinding('style.display') display = 'block';\n  @HostBinding('style.position') position = 'absolute';\n\n  message = 'not set';\n\n  constructor(\n    public authService: AuthService,\n    public router: Router\n  ) { }\n\n  ngOnInit() {\n    this.setMessage();\n  }\n\n  setMessage() {\n    this.message = 'Logged ' + (this.authService.isLoggedIn ? 'in' : 'out');\n  }\n\n  login() {\n    this.message = 'Trying to log in ...';\n\n    this.authService.login().subscribe(() => {\n      this.setMessage();\n\n      setTimeout(() => {\n        // Providing a `null` value to the named outlet\n        // clears the contents of the named outlet\n        this.router.navigate([{ outlets: { popup: null } }]);\n      }, 250);\n\n      if (this.authService.isLoggedIn) {\n        this.navigateDefault();\n      }\n    });\n  }\n\n  logout() {\n    this.authService.logout();\n    this.setMessage();\n    this.navigateDefault();\n  }\n\n  cancel() {\n    this.closePopup();\n  }\n\n  navigateDefault() {\n        // Get the redirect URL from our auth service\n        // If no redirect has been set, use the default\n        const redirect = this.authService.redirectUrl ? this.authService.redirectUrl : '/home';\n\n        // Redirect the user\n        // this.router.navigate([redirect]);\n  }\n\n  closePopup() {\n    // Providing a `null` value to the named outlet\n    // clears the contents of the named outlet\n    this.router.navigate([{ outlets: { popup: null } }]);\n  }\n}\n","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2xvZ291dC9sb2dvdXQuY29tcG9uZW50LmNzcyJ9 */\"","module.exports = \"<div class=\\\"popup padded\\\">\\n  <p>Logging out...</p>\\n</div>\\n<!-- \\n<button (click)=\\\"gotoDashboard()\\\">back to dashboard</button> -->\\n\"","import { Component, OnInit, HostBinding } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { AuthService } from '../auth.service';\nimport { MessageService } from '../messages/message.service';\n\nimport { slideInDownAnimation } from '../animations';\n\n@Component({\n  selector: 'app-logout',\n  templateUrl: './logout.component.html',\n  styleUrls: ['./logout.component.css'],\n  animations: [slideInDownAnimation]\n})\nexport class LogoutComponent implements OnInit {\n  @HostBinding('@routeAnimation') routeAnimation = true;\n  @HostBinding('style.display') display = 'block';\n  @HostBinding('style.position') position = 'absolute';\n\n  constructor(\n    private authService: AuthService,\n    private messageService: MessageService,\n    private router: Router\n  ) { }\n\n  ngOnInit() {\n    // this.authService.logout();\n    // this.router.navigate(['/']);\n\n    setTimeout(() => {\n      // Providing a `null` value to the named outlet\n      // clears the contents of the named outlet\n      this.router.navigate([{ outlets: { popup: null } }]);\n    }, 500);\n  }\n\n  gotoDashboard() {\n    this.router.navigate(['/dashboard']);\n  }\n}\n","import { Injectable } from '@angular/core';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class MessageService {\n  messages: string[] = [];\n\n  add(message: string) {\n    this.messages.push(message);\n  }\n\n  clear() {\n    this.messages = [];\n  }\n}\n","module.exports = \"/* MessagesComponent's private CSS styles\\n\\nh2 {\\n  color: red;\\n  font-weight: lighter;\\n  line-height: 1;\\n  display: block;\\n  margin: none;\\n}\\n\\nbody {\\n  margin: 2em;\\n}\\n\\nbody,\\ninput[text],\\nbutton {\\n  color: crimson;\\n  font-family: Cambria, Georgia;\\n}\\n\\nbutton.clear {\\n  font-family: Arial;\\n  background-color: #eee;\\n  border: none;\\n  padding: 5px 10px;\\n  border-radius: 4px;\\n  cursor: pointer;\\n  cursor: hand;\\n}\\n\\nbutton:hover {\\n  background-color: #cfd8dc;\\n}\\n\\nbutton:disabled {\\n  background-color: #eee;\\n  color: #aaa;\\n  cursor: auto;\\n}\\n\\nbutton.clear {\\n  color: #888;\\n  margin-bottom: 12px;\\n}\\n\\n.messages {\\n  background: #333333;\\n  display: block;\\n  border-radius: 4px;\\n} */\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvbWVzc2FnZXMvbWVzc2FnZXMuY29tcG9uZW50LmNzcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7R0FrREciLCJmaWxlIjoic3JjL2FwcC9tZXNzYWdlcy9tZXNzYWdlcy5jb21wb25lbnQuY3NzIiwic291cmNlc0NvbnRlbnQiOlsiLyogTWVzc2FnZXNDb21wb25lbnQncyBwcml2YXRlIENTUyBzdHlsZXNcblxuaDIge1xuICBjb2xvcjogcmVkO1xuICBmb250LXdlaWdodDogbGlnaHRlcjtcbiAgbGluZS1oZWlnaHQ6IDE7XG4gIGRpc3BsYXk6IGJsb2NrO1xuICBtYXJnaW46IG5vbmU7XG59XG5cbmJvZHkge1xuICBtYXJnaW46IDJlbTtcbn1cblxuYm9keSxcbmlucHV0W3RleHRdLFxuYnV0dG9uIHtcbiAgY29sb3I6IGNyaW1zb247XG4gIGZvbnQtZmFtaWx5OiBDYW1icmlhLCBHZW9yZ2lhO1xufVxuXG5idXR0b24uY2xlYXIge1xuICBmb250LWZhbWlseTogQXJpYWw7XG4gIGJhY2tncm91bmQtY29sb3I6ICNlZWU7XG4gIGJvcmRlcjogbm9uZTtcbiAgcGFkZGluZzogNXB4IDEwcHg7XG4gIGJvcmRlci1yYWRpdXM6IDRweDtcbiAgY3Vyc29yOiBwb2ludGVyO1xuICBjdXJzb3I6IGhhbmQ7XG59XG5cbmJ1dHRvbjpob3ZlciB7XG4gIGJhY2tncm91bmQtY29sb3I6ICNjZmQ4ZGM7XG59XG5cbmJ1dHRvbjpkaXNhYmxlZCB7XG4gIGJhY2tncm91bmQtY29sb3I6ICNlZWU7XG4gIGNvbG9yOiAjYWFhO1xuICBjdXJzb3I6IGF1dG87XG59XG5cbmJ1dHRvbi5jbGVhciB7XG4gIGNvbG9yOiAjODg4O1xuICBtYXJnaW4tYm90dG9tOiAxMnB4O1xufVxuXG4ubWVzc2FnZXMge1xuICBiYWNrZ3JvdW5kOiAjMzMzMzMzO1xuICBkaXNwbGF5OiBibG9jaztcbiAgYm9yZGVyLXJhZGl1czogNHB4O1xufSAqLyJdfQ== */\"","module.exports = \"<div *ngIf=\\\"messageService.messages.length\\\" class=\\\"messages padded\\\">\\n\\n  <h2>Messages</h2>\\n  <button class=\\\"clear\\\" (click)=\\\"messageService.clear()\\\">clear</button>\\n  <div *ngFor='let message of messageService.messages'>{{message}}</div>\\n\\n</div>\\n\"","import { Component, OnInit } from '@angular/core';\nimport { MessageService } from './message.service';\n\n@Component({\n  selector: 'app-messages',\n  templateUrl: './messages.component.html',\n  styleUrls: ['./messages.component.css']\n})\nexport class MessagesComponent implements OnInit {\n\n  constructor(public messageService: MessageService) { }\n\n  ngOnInit() {\n  }\n\n}\n","import { Component } from '@angular/core';\nimport { Router } from '@angular/router';\n\n@Component({\n    template: '<h2>Page not found</h2><button (click)=\"gotoHome()\">back to home</button>'\n})\nexport class PageNotFoundComponent {\n    constructor(private router: Router) { }\n\n    gotoHome() {\n        this.router.navigate([ '/' ]);\n    }\n}\n","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL3BhbGxpYXRpdmUtYXJlYS9wYWxsaWF0aXZlLWRldGFpbC9wYWxsaWF0aXZlLWRldGFpbC5jb21wb25lbnQuY3NzIn0= */\"","module.exports = \"<div *ngIf=\\\"palliative\\\">\\n\\n  <h1>\\\"{{palliative.shortname | uppercase}}\\\" Details</h1>\\n  <h2>\\\"{{palliative.longname}}\\\"</h2>\\n  <table class=\\\"altcolors\\\"><tbody class=\\\"altcolors\\\">\\n    <tr><td><label>id:</label></td><td class=\\\"description\\\">{{palliative.id}}</td></tr>\\n    <tr><td><label>Test ID:</label></td><td class=\\\"description\\\">{{palliative.testid}}</td></tr>\\n    <tr><td><label>Description:</label></td><td class=\\\"description\\\">{{palliative.description}}</td></tr>\\n    <tr><td><label>userid:</label></td><td>{{palliative.userid}}<span *ngIf=\\\"user\\\"> | {{user.username}} | {{user.firstname}} {{user.lastname}}</span></td></tr>\\n    <tr><td><label>Test Date/Tech</label><td>{{palliative.testDate}} | {{palliative.testTech}}</td></tr>\\n    <tr><td><label>Analysis Date/Tech</label></td><td>{{palliative.analysisDate}} | {{palliative.analysisTech}}</td></tr>\\n    <tr><td><label>Laboratory</label></td><td>{{palliative.laboratory}}</td></tr>\\n    <tr><td><label>mprt <span style=\\\"font-family: serif;\\\">&tau;</span>:</label></td><td>{{palliative.mprt}}</td></tr>\\n    <tr><td><label>mprt <span style=\\\"font-family: serif; font-style: italic;\\\">t</span></label></td><td>{{palliative.mprtTime}}</td></tr>\\n  </tbody>\\n  </table>\\n\\n  <div class=\\\"mprtGraph\\\">\\n    <label>MPRT <span style=\\\"font-family: serif;\\\">&tau;</span> Graph</label>\\n    <button *ngIf=\\\"!graphVisible\\\" (click)=\\\"showGraph()\\\">show</button>\\n    <button *ngIf=\\\"graphVisible\\\" (click)=\\\"hideGraph()\\\">hide</button>\\n    <button *ngIf=\\\"graphVisible\\\" (click)=\\\"plotGraph()\\\">plot</button>\\n    <button *ngIf=\\\"graphVisible && !graphDetails\\\" (click)=\\\"showDetails()\\\">show details</button>\\n    <button *ngIf=\\\"graphVisible && graphDetails\\\" (click)=\\\"hideDetails()\\\">hide details</button>\\n    <div *ngIf=\\\"graphVisible\\\">\\n      <div *ngIf=\\\"graphDetails\\\" id=\\\"mprtGraphC\\\"></div>\\n      <div id=\\\"mprtGraphLnC\\\"></div>\\n      <div *ngIf=\\\"graphDetails\\\" id=\\\"mprtGraphDeriv1\\\"></div>\\n      <div *ngIf=\\\"graphDetails\\\" id=\\\"mprtGraphDeriv2\\\"></div>\\n      <div *ngIf=\\\"graphDetails\\\" id=\\\"mprtGraphRSQ\\\"></div>\\n    </div>\\n  </div>\\n\\n  <div class=\\\"dataPointList\\\">\\n    <label>Data Points</label>\\n      <button *ngIf=\\\"!dataVisible\\\" (click)=\\\"showData()\\\">show</button>\\n      <button *ngIf=\\\"dataVisible\\\" (click)=\\\"hideData()\\\">hide</button>\\n    \\n    <table *ngIf=\\\"dataVisible\\\">\\n      <tbody class=\\\"altcolors\\\">\\n      <tr><th>t</th><th>C</th><th>ln(C)</th><th>C'(t)</th><th>C''(t)</th><th>R^2</th></tr>\\n      <tr *ngFor=\\\"let dp of palliative.data\\\" class=\\\"dataPoint\\\">\\n        <td>{{dp.t | number}}</td>\\n        <td>{{dp.C | number}}</td>\\n        <td>{{dp.lnC | number}}</td>\\n        <td>{{dp.dCdt | number}}</td>\\n        <td>{{dp.deriv2 | number}}</td>\\n        <td>{{dp.rsq | number}}</td>\\n      </tr>\\n    </tbody>\\n    </table>\\n  </div>\\n  \\n  <button *ngIf=\\\"!technicianView && authService.isTechnician\\\" (click)=\\\"edit()\\\">Edit</button>\\n\\n  <div *ngIf=\\\"technicianView\\\">\\n    <h1>Edit Details</h1>\\n    <div><label>Test ID:</label>&nbsp;<input [(ngModel)]=\\\"palliative.testid\\\" placeholder=\\\"testid\\\"/></div>\\n    <div><label>Short Name:</label>&nbsp;<input [(ngModel)]=\\\"palliative.shortname\\\" placeholder=\\\"shortname\\\"/></div>\\n    <div><label>Long Name:</label>&nbsp;<input [(ngModel)]=\\\"palliative.longname\\\" placeholder=\\\"longname\\\"/></div>\\n    <div><label>Description:</label>&nbsp;<input [(ngModel)]=\\\"palliative.description\\\" placeholder=\\\"description\\\"/></div>\\n    <div><label>User Id:</label>&nbsp;<input [(ngModel)]=\\\"palliative.userid\\\" placeholder=\\\"userid\\\"/></div>\\n    <div><label>Test Date:</label>&nbsp;<input [(ngModel)]=\\\"palliative.testDate\\\" placeholder=\\\"test date\\\"/></div>\\n    <div><label>Test Tech:</label>&nbsp;<input [(ngModel)]=\\\"palliative.testTech\\\" placeholder=\\\"dustfall technician name\\\"/></div>\\n    <div><label>Analysis Date:</label>&nbsp;<input [(ngModel)]=\\\"palliative.analysisDate\\\" placeholder=\\\"analysis date\\\"/></div>\\n    <div><label>Analysis Tech:</label>&nbsp;<input [(ngModel)]=\\\"palliative.analysisTech\\\" placeholder=\\\"analysis technician\\\"/></div>\\n    <div><label>Laboratory:</label>&nbsp;<input [(ngModel)]=\\\"palliative.laboratory\\\" placeholder=\\\"laboratory name\\\"/></div>\\n    <button (click)=\\\"save()\\\">save</button>\\n    <button (click)=\\\"cancel()\\\">cancel</button>\\n    <button (click)=\\\"cleanData()\\\">clean</button>\\n    <button (click)=\\\"calcMPRT()\\\">calc mprt</button>\\n    \\n    <div class=\\\"dataPointList padded\\\">\\n      <h3>Data Points</h3>\\n      <br/><textarea [(ngModel)]=\\\"textboxText\\\" cols=\\\"40\\\" rows=\\\"10\\\">{{textboxText}}</textarea>\\n      <br/><button (click)=\\\"importCSV()\\\">import CSV</button>\\n      <table>\\n        <tr><th>t</th><th>C</th></tr>\\n        <tr *ngFor=\\\"let dp of palliative.data\\\" class=\\\"dataPoint\\\">\\n          <td><input [(ngModel)]=\\\"dp.t\\\"/></td>\\n          <td><input [(ngModel)]=\\\"dp.C\\\"/></td>\\n        </tr>\\n      </table>\\n      <button (click)=\\\"addDatapoint()\\\">add datapoint</button>\\n    </div>\\n\\n  </div>\\n\\n</div>\\n\"","import { Component, OnInit, Input, AfterViewInit, ChangeDetectorRef } from '@angular/core';\nimport { Router, ActivatedRoute } from '@angular/router';\nimport { Location } from '@angular/common';\nimport { Palliative, DustColumnDataPoint, DustColumnGraphType } from '../palliative';\nimport { PalliativeService } from '../palliative.service';\nimport { User } from '../../user-area/user';\nimport { UserService } from '../../user-area/user.service';\nimport { AuthService } from '../../auth.service';\n// import * as Plotly from 'plotly.js';\ndeclare var Plotly: any;\n\n@Component({\n  selector: 'app-palliative-detail',\n  templateUrl: './palliative-detail.component.html',\n  styleUrls: ['./palliative-detail.component.css']\n})\nexport class PalliativeDetailComponent implements OnInit {\n  @Input() palliative: Palliative;\n  @Input() user: User;\n  dataVisible = false;\n  graphVisible = false;\n  graphDetails = false;\n  textboxText = '';\n  technicianView = false;\n\n  constructor(\n    private route: ActivatedRoute,\n    private router: Router,\n    private palliativeService: PalliativeService,\n    private authService: AuthService,\n    private userService: UserService,\n    private location: Location\n  ) { }\n\n  ngOnInit() {\n    this.getPalliative();\n    this.router.onSameUrlNavigation = \"reload\";\n  }\n\n  getUser(): void {\n    if (this.palliative && this.palliative.userid > 0) {\n      this.userService.getUser(this.palliative.userid).subscribe(user => this.user = user);\n    }\n  }\n\n  getPalliative(): void {\n    const id = +this.route.snapshot.paramMap.get('id');\n    this.palliativeService.getPalliative(id).subscribe(palliative => {\n      this.palliative = Palliative.CreateFromJSON(palliative);\n      this.getUser();\n    });\n  }\n\n  addDatapoint(): void {\n    if (!(this.palliative.data instanceof Array)) {\n      this.palliative.data = [];\n    }\n    this.palliative.data.push(new DustColumnDataPoint());\n  }\n\n  save(): void {\n    this.palliativeService.updatePalliative(this.palliative)\n      .subscribe(() => this.getPalliative());\n  }\n\n  goBack(): void {\n    this.location.back();\n  }\n\n  gotoPalliatives(): void {\n    this.router.navigate(['/palliatives']);\n  }\n\n  edit(): void {\n    this.technicianView = true;\n  }\n\n  cancel(): void {\n    this.technicianView = false;\n    this.getPalliative();\n    // this.gotoPalliatives();\n  }\n\n  showData() {\n    this.dataVisible = true;\n  }\n\n  hideData() {\n    this.dataVisible = false;\n  }\n\n  showGraph() {\n    this.graphVisible = true;\n    setTimeout(() => {\n      if (this.palliative.mprt === null) {\n        this.calcMPRT();\n      }\n      this.plotGraph();\n    }, 500);\n  }\n\n  hideGraph() {\n    this.graphVisible = false;\n  }\n\n  showDetails() {\n    this.graphDetails = true;\n  }\n\n  hideDetails() {\n    this.graphDetails = false;\n  }\n\n  plotGraph() {\n    if (!this.graphVisible)\n      return;\n    let e: HTMLDivElement;\n    // let trace1 = {\n    //   x: [],\n    //   y: [],\n    //   mode: 'lines',\n    //   type: 'scatter'\n    // };\n\n    // for (let element of this.palliative.data) {\n    //   trace1.x.push(element.t);\n    //   trace1.y.push(element.C);\n    // }\n\n    // let xys = this.palliative.getXYs(DustColumnGraphType.Concentration, 'lines', 'scatter');\n    // trace1.x = xys.x;\n    // trace1.y = xys.y;\n    if (!(this.palliative instanceof Palliative)) {\n      this.palliative = Palliative.CreateFromJSON(this.palliative);\n    }\n\n    let graphs = [\n      { id: 'mprtGraphC', type: DustColumnGraphType.Concentration },\n      { id: 'mprtGraphLnC', type: DustColumnGraphType.LnC },\n      { id: 'mprtGraphDeriv1', type: DustColumnGraphType.dCdt },\n      { id: 'mprtGraphDeriv2', type: DustColumnGraphType.Deriv2 },\n      { id: 'mprtGraphRSQ', type: DustColumnGraphType.RSQ }\n    ];\n    for (let g of graphs) {\n      let data = this.palliative.getXYs(g.type, 'lines', 'scatter');\n      let layout = this.palliative.getLayout(g.type);\n      e = <HTMLDivElement>document.getElementById(g.id);\n      this.graphDetails = true;\n      Plotly.plot(e, data, layout);\n      let self = this;\n      window.setTimeout(() => {\n        self.graphDetails = false;\n      }, 100);\n    }\n\n\n    // let layout = {\n    //   xaxis: {\n    //     title: 'time (t)'\n    //   },\n    //   yaxis: {\n    //     title: 'Concentration (C)'\n    //   },\n    //   title: 'Mean Particle Residence Time'\n    // };\n\n  }\n\n  calcMPRT() {\n    let p = new Palliative();\n    for (let value of this.palliative.data) {\n      p.data.push(new DustColumnDataPoint(value.t, value.C));\n    }\n    p.calcMPRT();\n    this.palliative.data = p.data;\n    this.palliative.mprt = p.mprt;\n    this.palliative.mprtTime = p.mprtTime;\n  }\n\n  cleanData() {\n    let p = new Palliative();\n    for (let value of this.palliative.data) {\n      p.data.push(new DustColumnDataPoint(value.t, value.C));\n    }\n    p.cleanData();\n    this.palliative.data = p.data;\n  }\n\n  importCSV() {\n    let p = new Palliative();\n    p.importFromCSV(this.textboxText);\n    this.palliative.data = p.data;\n  }\n}\n","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL3BhbGxpYXRpdmUtYXJlYS9wYWxsaWF0aXZlLWxpc3QvcGFsbGlhdGl2ZS1saXN0LmNvbXBvbmVudC5jc3MifQ== */\"","module.exports = \"<app-palliative-search></app-palliative-search>\\n\\n<h2>Palliatives</h2>\\n\\n<div class=\\\"rowheader\\\">\\n  <div class=\\\"pbadge\\\">Id</div>\\n  <div class=\\\"ptestid\\\">Test Id</div>\\n  <div class=\\\"pshortname\\\">Short Name</div>\\n  <div class=\\\"plaboratory\\\">Laboratory</div>\\n  <div class=\\\"pactions\\\">Actions</div>\\n</div>\\n\\n<div class=\\\"row\\\" *ngFor=\\\"let palliative of palliatives\\\">\\n  <div class=\\\"pbadge\\\">{{palliative.id}}</div>\\n  <div class=\\\"ptestid\\\">{{palliative.testid}}</div>\\n  <div class=\\\"pshortname\\\" routerLink=\\\"/palliatives/detail/{{palliative.id}}\\\">{{palliative.shortname}}</div>\\n  <div class=\\\"plaboratory\\\">{{palliative.laboratory}}</div>\\n  <div class=\\\"pactions\\\"><button class=\\\"pdelete\\\" *ngIf=\\\"authService.isAdmin\\\" title=\\\"delete palliative\\\" (click)=\\\"delete(palliative)\\\">x</button></div>\\n</div>\\n\\n<div *ngIf=\\\"authService.isLoggedIn\\\">\\n  <label>Add Palliative</label>&nbsp;\\n  <label>Test Id:</label>&nbsp;<input #palliativeTestid />\\n  <label>Short Name:</label>&nbsp;<input #palliativeName />&nbsp;\\n  <!-- (click) passes input value to add() and then clears the input -->\\n  <button (click)=\\\"add(palliativeTestid.value, palliativeName.value); palliativeTestid.value=''; palliativeName.value=''\\\">add</button>\\n</div>\\n\\n<!-- <app-palliative-detail [palliative]=\\\"selectedPalliative\\\"></app-palliative-detail> -->\\n\"","import { Component, OnInit } from '@angular/core';\nimport { Palliative } from '../palliative';\nimport { PalliativeService } from '../palliative.service';\nimport { AuthService } from '../../auth.service';\n\n@Component({\n  selector: 'app-palliative-list',\n  templateUrl: './palliative-list.component.html',\n  styleUrls: ['./palliative-list.component.css']\n})\nexport class PalliativeListComponent implements OnInit {\n  palliatives: Palliative[] = [];\n  private selectedId: number;\n\n  constructor(\n    private palliativeService: PalliativeService,\n    public authService: AuthService\n  ) { }\n\n  ngOnInit() {\n    this.getPalliatives();\n  }\n\n  add(testid: string, name: string): void {\n    testid = testid.trim();\n    name = name.trim();\n    if (!name) { return; }\n    if (!testid) { return; }\n    this.palliativeService.addPalliative({ id: null, testid: testid, shortname: name } as Palliative)\n      .subscribe(palliative => {\n        this.getPalliatives();\n      });\n  }\n\n  delete(palliative: Palliative): void {\n    this.palliativeService.deletePalliative(palliative).subscribe(() => {\n      this.getPalliatives();\n    });\n  }\n\n  getPalliatives(): void {\n    this.palliativeService.getPalliatives().subscribe(palliatives => this.palliatives = palliatives);\n  }\n}\n","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL3BhbGxpYXRpdmUtYXJlYS9wYWxsaWF0aXZlLXNlYXJjaC9wYWxsaWF0aXZlLXNlYXJjaC5jb21wb25lbnQuY3NzIn0= */\"","module.exports = \"<div id=\\\"palliative-search-component\\\">\\n\\n  <label>Palliative Search</label>&nbsp;\\n<input #searchBox id=\\\"search-box\\\" (keyup)=\\\"search(searchBox.value)\\\" />\\n\\n<ul class=\\\"search-result\\\">\\n  <li *ngFor=\\\"let palliative of palliatives$ | async\\\">\\n    <a routerLink=\\\"/palliatives/detail/{{palliative.id}}\\\">{{palliative.shortname}}</a>\\n  </li>\\n</ul>\\n</div>\"","import { Component, OnInit } from '@angular/core';\nimport { Observable, Subject } from 'rxjs';\n\nimport {\n  debounceTime, distinctUntilChanged, switchMap\n} from 'rxjs/operators';\n\nimport { Palliative } from '../palliative';\nimport { PalliativeService } from '../palliative.service';\n\n@Component({\n  selector: 'app-palliative-search',\n  templateUrl: './palliative-search.component.html',\n  styleUrls: ['./palliative-search.component.css']\n})\nexport class PalliativeSearchComponent implements OnInit {\n  palliatives$: Observable<Palliative[]>;\n  private searchTerms = new Subject<string>();\n\n  constructor(private palliativeService: PalliativeService) { }\n\n  ngOnInit() {\n    this.palliatives$ = this.searchTerms.pipe(\n      // wait 300ms after each keystroke before considering the term\n      debounceTime(300),\n      // ignore new term if same as previous term,\n      distinctUntilChanged(),\n      // switch to new search observable each time the term changes\n      switchMap((term: string) =>\n        this.palliativeService.searchPalliatives(term))\n    );\n  }\n\n  search(term: string): void {\n    this.searchTerms.next(term);\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { Observable, of } from 'rxjs';\nimport { catchError, map, tap, retry } from 'rxjs/operators';\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\nimport { MessageService } from '../messages/message.service';\nimport { Palliative } from './palliative';\nimport { PalliativesUrl, DevServiceUrl, PhpServiceUrl, BaseServiceUrl } from '../serviceUrls';\nimport { AuthService } from '../auth.service';\n\nconst httpOptions = {\n  headers: new HttpHeaders({ 'Content-Type': 'application/json' })\n};\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class PalliativeService {\n  private serviceUrl = '';\n\n  constructor(\n    private http: HttpClient,\n    private messageService: MessageService,\n    private authService: AuthService\n  ) {\n    let url: string = window.location.href;\n    if (url.search(/localhost/) >= 0) {\n      this.serviceUrl = DevServiceUrl + PhpServiceUrl + PalliativesUrl;\n    } else {\n      this.serviceUrl = BaseServiceUrl + PhpServiceUrl + PalliativesUrl;\n    }\n  }\n\n  getPalliative(id: number): Observable<Palliative> {\n    const url = `${this.serviceUrl}/${id}`;\n    return this.http.get<Palliative>(url).pipe(\n      retry(3),\n      // tap(_ => this.log(`fetched palliative id=${id}`)),\n      catchError(this.handleError<Palliative>(`getPalliative id=${id}`))\n    );\n  }\n\n  getPalliatives(): Observable<Palliative[]> {\n    return this.http.get<Palliative[]>(this.serviceUrl)\n      .pipe(\n        retry(3),\n        tap(palliatives => {\n          // this.log('fetched palliatives');\n          // console.log(palliatives);\n        }),\n        catchError(this.handleError('getPalliatives', []))\n      );\n  }\n\n  /** PUT: update the palliative on the server */\n  updatePalliative(palliative: Palliative): Observable<any> {\n    let formdata = new FormData();\n    formdata.append('session', this.authService.session);\n    formdata.append('method', 'PUT');\n    formdata.append('data', JSON.stringify(palliative));\n    return this.http.post(this.serviceUrl + `/${palliative.id}`, formdata).pipe(\n      // retry(3),\n      // tap(_ => this.log(`updated palliative id=${palliative.id}`)),\n      catchError(this.handleError<any>('updatePalliative'))\n    );\n  }\n\n  /** POST: add a new palliative to the server */\n  addPalliative(palliative: Palliative): Observable<Palliative> {\n    let formdata = new FormData();\n    formdata.append('session', this.authService.session);\n    formdata.append('method', 'POST');\n    formdata.append('data', JSON.stringify(palliative));\n    return this.http.post<Palliative>(this.serviceUrl, formdata).pipe(\n      // tap((_palliative: Palliative) => this.log(`added palliative w/ id=${_palliative.id}`)),\n      catchError(this.handleError<Palliative>('addPalliative'))\n    );\n  }\n\n  /** DELETE: delete the palliative from the server */\n  deletePalliative(palliative: Palliative | number): Observable<Palliative> {\n    const id = typeof palliative === 'number' ? palliative : palliative.id;\n    const url = `${this.serviceUrl}/${id}`;\n\n    let formdata = new FormData();\n    formdata.append('session', this.authService.session);\n    formdata.append('method', 'DELETE');\n    formdata.append('data', JSON.stringify({\"id\": id}));\n\n    return this.http.post<Palliative>(url, formdata).pipe(\n      retry(3),\n      // tap(_ => this.log(`deleted palliative id=${id}`)),\n      catchError(this.handleError<Palliative>('deletePalliative'))\n    );\n  }\n\n  /** GET palliatives whose name contains search term */\n  searchPalliatives(term: string): Observable<Palliative[]> {\n    if (!term.trim()) {\n      // if not search term, return empty palliative array\n      return of([]);\n    }\n    return this.http.get<Palliative[]>(`${this.serviceUrl}/?shortname=${term}%`)\n      .pipe(\n        retry(3),\n        // tap(_ => this.log(`found palliatives matching \"${term}\"`)),\n        catchError(this.handleError<Palliative[]>('searchPalliatives', []))\n      );\n  }\n\n  /**\n   * Handle Http operation that failed.\n   * Let the app continue.\n   * @param operation - name of the operation that failed\n   * @param result - optional value to return as the observable result\n   */\n  private handleError<T>(operation = 'operation', result?: T) {\n    return (error: any): Observable<T> => {\n\n      // TODO: send the error to remote logging infrastructure\n      console.error(error); // log to console instead\n\n      // TODO: better job of transforming error for palliative consumption\n      this.log(`${operation} failed: ${error.message}`);\n\n      // Let the app keep running by returning an empty result.\n      return of(result as T);\n    };\n  }\n\n  // Log a PalliativeService message with the MessageService\n  private log(message: string) {\n    this.messageService.add(`PalliativeService: ${message}`);\n  }\n}\n","\nexport enum DustColumnGraphType {\n    Concentration,\n    LnC,\n    dCdt,\n    Deriv1,\n    Deriv2,\n    RSQ\n}\n\nexport class DustColumnGraph {\n    x: number[] = [];\n    y: number[] = [];\n\n    constructor(\n        public mode: string = 'lines',\n        public type: string = 'scatter'\n    ) { }\n}\n\nexport class DustColumnDataPoint {\n\n    constructor(\n        public t: number = 0,   // time in seconds\n        public C: number = 0    // concentration in PM10 (coarse particles between 2.5 and 10 micrometers in diameter)\n    ) { }\n\n    lnC = 0;\n    slope = 0;\n    intercept = 0;\n    deriv1 = 0;\n    deriv2 = 0;\n    dCdt = 0;\n    rsq = 0;\n    tau = 0;\n\n    clone(): DustColumnDataPoint {\n        return new DustColumnDataPoint(this.t, this.C);\n    }\n\n    copy(v: DustColumnDataPoint) {\n        this.t = v.t;\n        this.C = v.C;\n        return this;\n    }\n\n    static createFromJSON(json: any): DustColumnDataPoint {\n        let p = new DustColumnDataPoint();\n        p.t = json.t;\n        p.C = json.C;\n        p.lnC = json.lnC;\n        p.slope = json.slope;\n        p.intercept = json.intercept;\n        p.deriv1 = json.deriv1;\n        p.deriv2 = json.deriv2;\n        p.dCdt = json.dCdt;\n        p.rsq = json.rsq;\n        p.tau = json.tau;\n        return p;\n    }\n\n    static lerp(a: DustColumnDataPoint, b: DustColumnDataPoint, x: number) {\n        return new DustColumnDataPoint(\n            x * a.t + (1 - x) * b.t,\n            x * a.C + (1 - x) * b.C\n        );\n    }\n}\n\n// class MPRTPoint {\n//     lnC = 0;\n//     slope = 0;\n//     intercept = 0;\n//     deriv1 = 0;\n//     deriv2 = 0;\n//     dCdt = 0;\n//     rsq = 0;\n//     tau = 0;\n\n//     constructor(\n//         public t: number = 0,\n//         public C: number = 0\n//     ) {\n//         this.lnC = Math.log(C);\n//     }\n// }\n\nfunction mean(Xs: number[]): number {\n    let a = 0;\n    for (let x of Xs) a += x;\n    return a / Xs.length;\n}\n\n/**\n * Calculate the slope of the linear regression line.\n * @param knownYs \n * @param knownXs \n */\nfunction regressionSlope(knownYs: number[], knownXs: number[]): number {\n    if (knownXs.length != knownYs.length) return 0.0;\n    if (knownXs.length < 1) return 0.0;\n    let count = knownXs.length;\n\n    let meanX = mean(knownXs);\n    let meanY = mean(knownYs);\n\n    let num = 0;\n    let den = 0;\n    for (let i = 0; i < count; i++) {\n        let x = knownXs[i];\n        let y = knownYs[i];\n        num += (x - meanX) * (y - meanY);\n        den += (x - meanX) * (x - meanX);\n    }\n\n    return num / den;\n}\n\nfunction regressionIntercept(knownYs: number[], knownXs: number[]): number {\n    if (knownXs.length != knownYs.length) return 0.0;\n    if (knownXs.length < 1) return 0.0;\n    let count = knownXs.length;\n\n    let meanX = mean(knownXs);\n    let meanY = mean(knownYs);\n\n    let num = 0;\n    let den = 0;\n    for (let i = 0; i < count; i++) {\n        let x = knownXs[i];\n        let y = knownYs[i];\n        num += (x - meanX) * (y - meanY);\n        den += (x - meanX) * (x - meanX);\n    }\n    let b = num / den;\n\n    return meanY - b * meanX;\n}\n\n// Pearson product-moment correlation coefficient\nfunction RSQ(knownYs: number[], knownXs: number[]): number {\n    if (knownXs.length != knownYs.length) return 0.0;\n    if (knownXs.length < 1) return 0.0;\n    let count = knownXs.length;\n\n    let meanX = mean(knownXs);\n    let meanY = mean(knownYs);\n\n    let num = 0;\n    let denx = 0;\n    let deny = 0;\n    for (let i = 0; i < count; i++) {\n        let x = knownXs[i];\n        let y = knownYs[i];\n        num += (x - meanX) * (y - meanY);\n        denx += (x - meanX) * (x - meanX);\n        deny += (y - meanY) * (y - meanY);\n    }\n    return num / Math.sqrt(denx * deny);\n}\n\nexport class Palliative {\n    id: number;\n    userid: number;\n    testid: string;\n    shortname: string;\n    longname: string;\n    description: string;\n    data: DustColumnDataPoint[] = [];\n    mprt: number;\n    mprtTime: number;\n\n    // New fields identified\n    testTech: string = \"unknown tech\";\n    testDate: string = \"0000-01-01 00:00:00\";\n    analysisTech: string = \"unknown tech\";\n    analysisDate: string = \"0000-01-01 00:00:00\";\n    laboratory: string = \"unknown laboratory\";\n\n    static CreateFromJSON(palliative: any): Palliative {\n        let p = new Palliative();\n        p.id = palliative.id;\n        p.userid = palliative.userid;\n        p.testid = palliative.testid;\n        p.shortname = palliative.shortname;\n        p.longname = palliative.longname;\n        p.description = palliative.description || \"\";\n        p.data = [];\n        if (palliative.data) {\n            for (let dcp of palliative.data) {\n                p.data.push(DustColumnDataPoint.createFromJSON(dcp));\n            }    \n        }\n        p.mprt = palliative.mprt || 0;\n        p.mprtTime = palliative.mprtTime || 0;\n\n        // new fields identified\n        p.testTech = palliative.testTech ? palliative.testTech : p.testTech;\n        p.testDate = palliative.testDate ? palliative.testDate : p.testDate;\n        p.analysisTech = palliative.analysisTech ? palliative.analysisTech : p.analysisTech;\n        p.analysisDate = palliative.analysisDate ? palliative.analysisDate : p.analysisDate;\n        p.laboratory = palliative.laboratory ? palliative.laboratory : p.laboratory;\n\n        return p;\n    }\n\n    cleanData() {\n        let points: DustColumnDataPoint[] = [];\n        const MaxSeconds = 59;\n        for (let i = 0; i <= MaxSeconds; i++) {\n            points.push(new DustColumnDataPoint());\n        }\n\n        for (let e of this.data) {\n            if (typeof e.t !== 'number') e.t = parseFloat(e.t);\n            if (typeof e.C !== 'number') e.C = parseFloat(e.C);\n        }\n\n        this.data.sort((a: DustColumnDataPoint, b: DustColumnDataPoint) => {\n            return a.t - b.t;\n        });\n        // remove duplicates and outsiders\n        let uniq: DustColumnDataPoint[] = [];\n        let last = -1;\n        for (let e of this.data) {\n            if (e.t < 0) continue;\n            if (e.t > 59) continue;\n            if (e.t == last) continue;\n            last = e.t;\n            uniq.push(e);\n        }\n        this.data = uniq;\n\n        console.log(this.data.length);\n        let j = 0;\n        for (let i = 0; i <= MaxSeconds; i++) {\n            let t = i;\n            let a = this.data[j].clone();\n            let b = this.data[j + 1].clone();\n            if (j == 0 && this.data[j].t > t) {\n                points[i].t = t;\n                points[i].C = a.C;\n                console.log('pre: ', j, points[i]);\n            } else if (j == this.data.length - 1 && b.t <= t) {\n                points[i].t = t;\n                points[i].C = b.C;\n                console.log('post: ', j, points[i]);\n            } else {\n                // skip forward until we have the right two samples    \n                while (j < this.data.length - 2 && b.t < t) {\n                    j++;\n                    a = this.data[j].clone();\n                    b = this.data[j + 1].clone();\n                    if (j >= this.data.length - 2) break;\n                }\n                if (b.t >= t) {\n                    let dt = b.t - a.t;\n                    let dC = b.C - a.C;\n                    let slope = dC / dt;\n                    let delta = t - a.t;\n                    points[i].t = t;\n                    points[i].C = a.C + delta * slope;\n                } else {\n                    points[i].t = t;\n                    points[i].C = b.C;\n                }\n                console.log('lerp: ', j, points[i]);\n            }\n        }\n        this.data = points;\n    }\n\n    calcMPRT() {\n        const MaxSeconds = 59;\n\n        let i = 0;\n        for (let p of this.data) {\n            if (p.t != i) break;\n            i++;\n        }\n\n        this.mprt = -1;\n        this.mprtTime = -1;\n        if (i != 60) {\n            return false;\n        }\n\n        let knownXs: number[] = [];\n        let knownYs: number[] = [];\n        let foundTau = false;\n        for (let i = 0; i <= MaxSeconds; i++) {\n            let p = this.data[i];\n            p.lnC = Math.log(p.C);\n            knownXs.push(p.t);\n            knownYs.push(p.lnC);\n            p.slope = regressionSlope(knownYs, knownXs);\n            p.intercept = regressionIntercept(knownYs, knownXs);\n            p.deriv1 = Math.abs(Math.exp(p.intercept) * p.slope);\n            p.deriv2 = p.deriv1 * Math.abs(p.slope * Math.exp(p.slope * p.t));\n            p.dCdt = Math.abs(Math.exp(p.intercept) * p.slope * Math.exp(p.slope * p.t));\n            p.rsq = Math.pow(RSQ(knownYs, knownXs), 2);\n            p.tau = Math.abs(1 / p.slope);\n\n            if (i < 6) continue;\n\n            // 0.001 mg/m^3/s^2\n            if (!foundTau && p.deriv2 < 0.001) {\n                this.mprt = p.tau;\n                this.mprtTime = p.t;\n                foundTau = true;\n            }\n        }\n\n        return true;\n    }\n\n    importFromCSV(data: string) {\n        // split using regex any sequence of 1 or more newlines or carriage returns\n        let splitLines: string[][] = [];\n        let lines = data.split(/[\\n\\r]+/);\n        for (let line of lines) {\n            // split with either white space or commas\n            let unfilteredTokens = line.split(/[,\\s]+/);\n            if (unfilteredTokens.length > 0 && unfilteredTokens[0][0] == '#') continue;\n            let tokens: string[] = [];\n            for (let t of unfilteredTokens) {\n                if (t.length > 0) {\n                    tokens.push(t);\n                }\n            }\n            if (tokens.length == 0) {\n                continue;\n            }\n\n            splitLines.push(tokens);\n        }\n\n        // tokens should be numbers t and then C\n        // we skip every line when the first two tokens are not numbers\n        let i = 0;\n        this.data = [];\n        for (let line of splitLines) {\n            if (line.length >= 2) {\n                let t = +line[0];\n                let C = +line[1];\n                if (isNaN(t) || isNaN(C)) continue;\n                this.data.push(new DustColumnDataPoint(t, C));\n            }\n        }\n    }\n\n    getXYs(whichType: DustColumnGraphType, mode: string = 'lines', type: string = 'scatter'): DustColumnGraph[] {\n        let dcgd = new DustColumnGraph(mode, type);\n        for (let p of this.data) {\n            let x = p.t;\n            let y = 0;\n            switch (whichType) {\n                case DustColumnGraphType.Concentration:\n                    y = p.C;\n                    break;\n                case DustColumnGraphType.LnC:\n                    y = p.lnC;\n                    break;\n                case DustColumnGraphType.Deriv1:\n                    y = p.deriv1;\n                    break;\n                case DustColumnGraphType.Deriv2:\n                    y = p.deriv2;\n                    break;\n                case DustColumnGraphType.dCdt:\n                    y = p.dCdt;\n                    break;\n                case DustColumnGraphType.RSQ:\n                    y = p.rsq;\n                    break;\n                default:\n                    y = 0;\n            }\n            dcgd.x.push(x);\n            dcgd.y.push(y);\n        }\n        let linearRegression = new DustColumnGraph(mode, type);\n        if (whichType == DustColumnGraphType.LnC) {\n            let slope = 0;\n            let intercept = 0;\n            for (let i = 0; i <= this.data.length; i++) {\n                if (this.data[i].t > this.mprtTime) break;\n                slope = this.data[i].slope;\n                intercept = this.data[i].intercept;\n            }\n            for (let i = 0; i <= this.data.length; i++) {\n                if (this.data[i].t > this.mprtTime) break;\n                linearRegression.x.push(this.data[i].t);\n                linearRegression.y.push(intercept + slope * this.data[i].t);\n            }\n            return [dcgd, linearRegression];\n        }\n        return [dcgd];\n    }\n\n    getLayout(whichType: DustColumnGraphType): any {\n        let layout = {\n            xaxis: {\n                title: 'time (t)'\n            },\n            yaxis: {\n                title: 'Concentration (C)'\n            },\n            title: 'Mean Particle Residence Time'\n        };\n\n        switch (whichType) {\n            case DustColumnGraphType.Concentration:\n                layout.xaxis.title = 'Time (s)';\n                layout.yaxis.title = 'Concentration (mg/m³)';\n                layout.title = 'Mean Particle Residence Time τ';\n                break;\n            case DustColumnGraphType.LnC:\n                layout.xaxis.title = 'Time (s)';\n                layout.yaxis.title = 'Ln(C)';\n                layout.title = 'Mean Particle Residence Time τ';\n                break;\n            case DustColumnGraphType.Deriv1:\n                layout.xaxis.title = 'Time (s)';\n                layout.yaxis.title = 'Concentration (mg/m³/s)';\n                layout.title = 'Rate of Change in Concentration';\n                break;\n            case DustColumnGraphType.Deriv2:\n                layout.xaxis.title = 'Time (s)';\n                layout.yaxis.title = 'Concentration (mg/m³/s²)';\n                layout.title = 'Rate of Reduction in Rate of Concentration Change';\n                break;\n            case DustColumnGraphType.dCdt:\n                layout.xaxis.title = 'Time (s)';\n                layout.yaxis.title = 'Concentration (mg/m³/s)';\n                layout.title = 'Rate of Change in Concentration';\n                break;\n            case DustColumnGraphType.RSQ:\n                layout.xaxis.title = 'Time (s)';\n                layout.yaxis.title = 'R²';\n                layout.title = 'R²';\n                break;\n        }\n        return layout;\n    }\n}\n","import { NgModule } from '@angular/core';\nimport { RouterModule, Routes, Router } from '@angular/router';\n\nimport { PalliativeListComponent } from './palliative-list/palliative-list.component';\nimport { PalliativeDetailComponent } from './palliative-detail/palliative-detail.component';\n\nconst palliativesRoutes: Routes = [\n    { path: 'palliatives', component: PalliativeListComponent },\n    { path: 'palliatives/detail/:id', component: PalliativeDetailComponent },\n];\n\n@NgModule({\n    imports: [\n        RouterModule.forChild(palliativesRoutes)\n    ],\n    exports: [\n        RouterModule\n    ]\n})\nexport class PalliativesRoutingModule { }\n","\n\nexport const UsersUrl = '/users';\nexport const PalliativesUrl = '/palliatives';\nexport const AuthUrl = '/auth';\nexport const PhpServiceUrl = '/service.php';\nexport const PhpAdminUrl = '/admin.php';\nexport const BaseServiceUrl = 'https://snow.ine.uaf.edu/~uafdust';\nexport const DevServiceUrl = 'http://localhost:8000';","import { Injectable } from '@angular/core';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class SplashscreenService {\n  private disclaimerAccepted_ = true;\n  get disclaimerAccepted(): boolean { return this.disclaimerAccepted_; }\n  \n  constructor() { }\n\n  accept() {\n    this.disclaimerAccepted_ = true;\n  }\n}\n","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL3NwbGFzaHNjcmVlbi9zcGxhc2hzY3JlZW4uY29tcG9uZW50LmNzcyJ9 */\"","module.exports = \"<div style=\\\"padding: 1em; width: 80%;\\\" *ngIf=\\\"!accepted\\\">\\n<p>\\n    THE SOFTWARE IS PROVIDED \\\"AS IS\\\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\\n</p>\\n\\n<button (click)=\\\"accept()\\\">Accept</button>\\n</div>\"","import { Component, OnInit } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { SplashscreenService } from '../splashscreen.service';\n\n@Component({\n  selector: 'app-splashscreen',\n  templateUrl: './splashscreen.component.html',\n  styleUrls: ['./splashscreen.component.css']\n})\nexport class SplashscreenComponent implements OnInit {\n  get accepted(): boolean { return this.splashscreenService.disclaimerAccepted; }\n\n  constructor(\n    public router: Router,\n    private splashscreenService: SplashscreenService\n    ) { }\n\n  ngOnInit() {\n  }\n\n  accept() {\n    this.splashscreenService.accept();\n  }\n}\n","module.exports = \"/* DetailComponent's private CSS styles */\\n\\n\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvdXNlci1hcmVhL3VzZXItZGV0YWlsL3VzZXItZGV0YWlsLmNvbXBvbmVudC5jc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUEseUNBQXlDIiwiZmlsZSI6InNyYy9hcHAvdXNlci1hcmVhL3VzZXItZGV0YWlsL3VzZXItZGV0YWlsLmNvbXBvbmVudC5jc3MiLCJzb3VyY2VzQ29udGVudCI6WyIvKiBEZXRhaWxDb21wb25lbnQncyBwcml2YXRlIENTUyBzdHlsZXMgKi9cblxuIl19 */\"","module.exports = \"<div *ngIf=\\\"user$ | async as user\\\">\\n\\n  <h3>{{theUser.username | uppercase}} Details</h3>\\n  <div><span>id: {{theUser.userid}}</span></div>\\n  <!-- <div><span>Name: {{theUser.firstname}} {{theUser.lastname}}</span></div>\\n  <div><span>Organization: {{theUser.organization}}</span></div>\\n  <div><span>Email: {{theUser.email}}</span></div> -->\\n  \\n  <div><label>Full name:<input [(ngModel)]=\\\"theUser.fullname\\\" placeholder=\\\"fullname\\\"></label></div>\\n\\\\  <div><label>Organization:<input [(ngModel)]=\\\"theUser.organization\\\" placeholder=\\\"organization\\\"></label></div>\\n  <div><label>Email:<input [(ngModel)]=\\\"theUser.email\\\" placeholder=\\\"email\\\"></label></div>\\n  \\n  <button *ngIf=\\\"authService.isAdmin\\\" (click)=\\\"save()\\\">save</button>\\n  <button (click)=\\\"goBack()\\\">go back</button>\\n  <!-- <button (click)=\\\"gotoUsers(user)\\\">go to users</button> -->\\n</div>\"","import { Component, OnInit, Input } from '@angular/core';\nimport { ActivatedRoute, Router, ParamMap } from '@angular/router';\nimport { Location } from '@angular/common';\nimport { Observable } from 'rxjs';\n\nimport { User } from '../user';\nimport { UserService } from '../user.service';\nimport { AuthService } from '../../auth.service';\n\n@Component({\n  selector: 'app-user-detail',\n  templateUrl: './user-detail.component.html',\n  styleUrls: ['./user-detail.component.css']\n})\nexport class UserDetailComponent implements OnInit {\n  @Input() user: User;\n  user$: Observable<User>;\n  theUser: User;\n\n  constructor(\n    private route: ActivatedRoute,\n    private router: Router,\n    private service: UserService,\n    private location: Location,\n    private authService: AuthService\n  ) { }\n\n  ngOnInit() {\n    const id = +this.route.snapshot.paramMap.get('id');\n    this.user$ = this.service.getUser(id);\n    this.user$.subscribe(user => {\n      this.theUser = user;\n    });\n  }\n\n  getUser(): void {\n    const id = +this.route.snapshot.paramMap.get('id');\n    this.service.getUser(id).subscribe(user => this.theUser = user);\n  }\n\n  save(): void {\n    this.service.updateUser(this.theUser)\n      .subscribe(() => {\n        this.getUser();\n      });\n  }\n\n  gotoUsers(user: User) {\n    const userId = user ? user.userid : null;\n    this.router.navigate(['/users', { id: userId } ]);\n  }\n\n  goBack() {\n    this.router.navigate(['/users', { id: this.theUser.userid } ]);\n  }\n\n  // goBack(): void {\n  //   this.location.back();\n  // }\n}\n","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL3VzZXItYXJlYS91c2VyLWxpc3QvdXNlci1saXN0LmNvbXBvbmVudC5jc3MifQ== */\"","module.exports = \"<h1>Users<span *ngIf=\\\"authService.isAdmin\\\"> Administration</span></h1>\\n\\n<div *ngIf=\\\"authService.isAdmin\\\">\\n  <label>User name:\\n    <input #userName />\\n  </label>&nbsp;\\n  <!-- (click) passes input value to add() and then clears the input -->\\n  <button (click)=\\\"add(userName.value); userName.value=''\\\">\\n    add\\n  </button>\\n</div>\\n\\n<div class=\\\"rowheader\\\">\\n  <div class=\\\"pbadge\\\">Id</div>\\n  <div *ngIf=\\\"authService.isAdmin\\\" class=\\\"uusername\\\">Username</div>\\n  <div *ngIf=\\\"authService.isAdmin\\\" class=\\\"uuserrole\\\">Role</div>\\n  <div class=\\\"ufullname\\\">Full Name</div>\\n  <div class=\\\"uemail\\\">Email</div>\\n  <div class=\\\"uorganization\\\">Organization</div>\\n  <div *ngIf=\\\"authService.isAdmin\\\" class=\\\"pactions\\\">Actions</div>\\n</div>\\n\\n<div class=\\\"row\\\" *ngFor=\\\"let user of users$ | async\\\" [class.selected]=\\\"user.userid === selectedId\\\">\\n  <div routerLink=\\\"/users/detail/{{user.userid}}\\\">\\n    <div class=\\\"pbadge\\\">{{user.userid}}</div>\\n    <div *ngIf=\\\"authService.isAdmin\\\" class=\\\"uusername\\\">{{user.username}}</div>\\n    <div *ngIf=\\\"authService.isAdmin\\\" class=\\\"uuserrole\\\">{{user.userrole}}</div>\\n    <div class=\\\"ufullname\\\">{{user.fullname}}</div>\\n    <div class=\\\"uemail\\\">{{user.email}}</div>\\n    <div class=\\\"uorganization\\\">{{user.organization}}</div>\\n    <div *ngIf=\\\"authService.isAdmin\\\" class=\\\"pactions\\\"><button *ngIf=\\\"authService.isAdmin\\\" class=\\\"delete\\\" title=\\\"delete user\\\"\\n        (click)=\\\"delete(user)\\\">x</button></div>\\n  </div>\\n</div>\\n<!-- <app-user-detail [user]=\\\"selectedUser\\\"></app-user-detail> -->\\n\"","import { Component, OnInit } from '@angular/core';\nimport { ActivatedRoute, ParamMap } from '@angular/router';\nimport { Observable } from 'rxjs';\nimport { switchMap } from 'rxjs/operators';\n\nimport { User } from '../user';\nimport { UserService } from '../user.service';\nimport { AuthService } from '../../auth.service';\n\n@Component({\n  selector: 'app-user-list',\n  templateUrl: './user-list.component.html',\n  styleUrls: ['./user-list.component.css']\n})\nexport class UserListComponent implements OnInit {\n  theUsers: User[];\n  users$: Observable<User[]>;\n  private selectedId: number;\n\n  constructor(\n    private service: UserService,\n    private route: ActivatedRoute,\n    public authService: AuthService\n  ) { }\n\n  ngOnInit() {\n    this.getUsers();\n    // this.users$ = this.route.paramMap.pipe(\n    //   switchMap((params: ParamMap) => {\n    //     // + causes the returned string to be converted to a number\n    //     this.selectedId = +params.get('id');\n    //     return this.service.getUsers();\n    //   })\n    // );\n  }\n\n  add(name: string): void {\n    name = name.trim();\n    if (!name) { return; }\n    this.service.addUser(new User(0, name))\n      .subscribe(user => {\n        this.getUsers();\n      });\n  }\n\n  delete(user: User): void {\n    this.theUsers = this.theUsers.filter(h => h !== user);\n    this.service.deleteUser(user).subscribe(() => {\n      this.getUsers();\n    });\n  }\n\n  getUsers(): void {\n    this.users$ = this.route.paramMap.pipe(\n      switchMap((params: ParamMap) => {\n        // + causes the returned string to be converted to a number\n        this.selectedId = +params.get('id');\n        return this.service.getUsers();\n      })\n    );\n    this.users$.subscribe(users => this.theUsers = users);\n    // this.service.getUsers().subscribe(users => this.theUsers = users);\n  }\n}\n\n","module.exports = \"/* UserSearch private styles */\\n.search-result li {\\n    border-bottom: 1px solid gray;\\n    border-left: 1px solid gray;\\n    border-right: 1px solid gray;\\n    width:195px;\\n    height: 16px;\\n    padding: 5px;\\n    background-color: white;\\n    cursor: pointer;\\n    list-style-type: none;\\n  }\\n.search-result li:hover {\\n    background-color: #607D8B;\\n  }\\n.search-result li a {\\n    color: #888;\\n    display: block;\\n    text-decoration: none;\\n  }\\n.search-result li a:hover {\\n    color: white;\\n  }\\n.search-result li a:active {\\n    color: white;\\n  }\\n#search-box {\\n    width: 200px;\\n    height: 20px;\\n  }\\nul.search-result {\\n    margin-top: 0;\\n    padding-left: 0;\\n  }\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvdXNlci1hcmVhL3VzZXItc2VhcmNoL3VzZXItc2VhcmNoLmNvbXBvbmVudC5jc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUEsOEJBQThCO0FBQzlCO0lBQ0ksNkJBQTZCO0lBQzdCLDJCQUEyQjtJQUMzQiw0QkFBNEI7SUFDNUIsV0FBVztJQUNYLFlBQVk7SUFDWixZQUFZO0lBQ1osdUJBQXVCO0lBQ3ZCLGVBQWU7SUFDZixxQkFBcUI7RUFDdkI7QUFFQTtJQUNFLHlCQUF5QjtFQUMzQjtBQUVBO0lBQ0UsV0FBVztJQUNYLGNBQWM7SUFDZCxxQkFBcUI7RUFDdkI7QUFFQTtJQUNFLFlBQVk7RUFDZDtBQUNBO0lBQ0UsWUFBWTtFQUNkO0FBQ0E7SUFDRSxZQUFZO0lBQ1osWUFBWTtFQUNkO0FBR0E7SUFDRSxhQUFhO0lBQ2IsZUFBZTtFQUNqQiIsImZpbGUiOiJzcmMvYXBwL3VzZXItYXJlYS91c2VyLXNlYXJjaC91c2VyLXNlYXJjaC5jb21wb25lbnQuY3NzIiwic291cmNlc0NvbnRlbnQiOlsiLyogVXNlclNlYXJjaCBwcml2YXRlIHN0eWxlcyAqL1xuLnNlYXJjaC1yZXN1bHQgbGkge1xuICAgIGJvcmRlci1ib3R0b206IDFweCBzb2xpZCBncmF5O1xuICAgIGJvcmRlci1sZWZ0OiAxcHggc29saWQgZ3JheTtcbiAgICBib3JkZXItcmlnaHQ6IDFweCBzb2xpZCBncmF5O1xuICAgIHdpZHRoOjE5NXB4O1xuICAgIGhlaWdodDogMTZweDtcbiAgICBwYWRkaW5nOiA1cHg7XG4gICAgYmFja2dyb3VuZC1jb2xvcjogd2hpdGU7XG4gICAgY3Vyc29yOiBwb2ludGVyO1xuICAgIGxpc3Qtc3R5bGUtdHlwZTogbm9uZTtcbiAgfVxuICBcbiAgLnNlYXJjaC1yZXN1bHQgbGk6aG92ZXIge1xuICAgIGJhY2tncm91bmQtY29sb3I6ICM2MDdEOEI7XG4gIH1cbiAgXG4gIC5zZWFyY2gtcmVzdWx0IGxpIGEge1xuICAgIGNvbG9yOiAjODg4O1xuICAgIGRpc3BsYXk6IGJsb2NrO1xuICAgIHRleHQtZGVjb3JhdGlvbjogbm9uZTtcbiAgfVxuICBcbiAgLnNlYXJjaC1yZXN1bHQgbGkgYTpob3ZlciB7XG4gICAgY29sb3I6IHdoaXRlO1xuICB9XG4gIC5zZWFyY2gtcmVzdWx0IGxpIGE6YWN0aXZlIHtcbiAgICBjb2xvcjogd2hpdGU7XG4gIH1cbiAgI3NlYXJjaC1ib3gge1xuICAgIHdpZHRoOiAyMDBweDtcbiAgICBoZWlnaHQ6IDIwcHg7XG4gIH1cbiAgXG4gIFxuICB1bC5zZWFyY2gtcmVzdWx0IHtcbiAgICBtYXJnaW4tdG9wOiAwO1xuICAgIHBhZGRpbmctbGVmdDogMDtcbiAgfSJdfQ== */\"","module.exports = \"<div id=\\\"search-component\\\">\\n  <h4>User Search</h4>\\n\\n  <input #searchBox id=\\\"search-box\\\" (keyup)=\\\"search(searchBox.value)\\\" />\\n\\n  <ul class=\\\"search-result\\\">\\n    <li *ngFor=\\\"let user of users$ | async\\\">\\n      <a routerLink=\\\"/users/detail/{{user.id}}\\\">{{user.username}}</a>\\n    </li>\\n  </ul>\\n</div>\"","import { Component, OnInit } from '@angular/core';\nimport { Observable, Subject } from 'rxjs';\n\nimport {\n  debounceTime, distinctUntilChanged, switchMap\n} from 'rxjs/operators';\n\nimport { User } from '../user';\nimport { UserService } from '../user.service';\n\n@Component({\n  selector: 'app-user-search',\n  templateUrl: './user-search.component.html',\n  styleUrls: ['./user-search.component.css']\n})\nexport class UserSearchComponent implements OnInit {\n  users$: Observable<User[]>;\n  private searchTerms = new Subject<string>();\n\n  constructor(private userService: UserService) { }\n\n  ngOnInit() {\n    this.users$ = this.searchTerms.pipe(\n      // wait 300ms after each keystroke before considering the term\n      debounceTime(300),\n      // ignore new term if same as previous term\n      distinctUntilChanged(),\n      // switch to new search observable each time the term changes\n      switchMap((term: string) =>\n        this.userService.searchUsers(term))\n    );\n\n  }\n\n  // Push a search term into the observable stream\n  search(term: string): void {\n    this.searchTerms.next(term);\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { Router, UrlHandlingStrategy } from '@angular/router';\nimport { Observable, of } from 'rxjs';\nimport { catchError, map, tap, retry } from 'rxjs/operators';\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\nimport { BaseServiceUrl, DevServiceUrl, PhpServiceUrl, UsersUrl } from '../serviceUrls';\n\nimport { User } from './user';\nimport { MessageService } from '../messages/message.service';\n\nconst httpOptions = {\n  headers: new HttpHeaders({ 'Content-Type': 'application/json' })\n};\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class UserService {\n  private serviceUrl = '';\n  lastUserId = 0;\n\n  constructor(\n    private http: HttpClient,\n    private messageService: MessageService,\n    private router: Router\n  ) {\n    let url: string = window.location.href;\n    if (url.search(/localhost/) >= 0) {\n      this.serviceUrl = DevServiceUrl + PhpServiceUrl + UsersUrl;\n    } else {\n      this.serviceUrl = BaseServiceUrl + PhpServiceUrl + UsersUrl;\n    }\n  }\n\n  getUser(id: number): Observable<User> {\n    // this.messageService.add(`UserService: fetched user id = ${id}`);\n    // return of(USERS.find(user => user.id === id));\n\n    this.lastUserId = id;\n    const url = `${this.serviceUrl}/${id}`;\n    return this.http.get<User>(url).pipe(\n      retry(3),\n      // tap(_ => this.log(`fetched user id=${id}`)),\n      catchError(this.handleError<User>(`getUser id=${id}`))\n    );\n  }\n\n  getUsers(): Observable<User[]> {\n    // this.messageService.add('UserService: fetched users');\n    // return of(USERS);\n    return this.http.get<User[]>(this.serviceUrl)\n      .pipe(\n        retry(3),\n        // tap(users => this.log('fetched users')),\n        catchError(this.handleError('getUsers', []))\n      );\n  }\n\n  /** PUT: update the user on the server */\n  updateUser(user: User): Observable<any> {\n    const id = user.userid;\n    const url = `${this.serviceUrl}/${id}`;\n    return this.http.put(url, user, httpOptions).pipe(\n      retry(3),\n      tap(_ => this.log(`updated user id=${user.userid}`)),\n      catchError(this.handleError<any>('updateUser'))\n    );\n  }\n\n  /** POST: add a new user to the server */\n  addUser(user: User): Observable<User> {\n    return this.http.post<User>(this.serviceUrl, user, httpOptions).pipe(\n      tap((_user: User) => this.log(`added user w/ id=${_user.userid}`)),\n      catchError(this.handleError<User>('addUser'))\n    );\n  }\n\n  /** DELETE: delete the user from the server */\n  deleteUser(user: User | number): Observable<User> {\n    const id = typeof user === 'number' ? user : user.userid;\n    const url = `${this.serviceUrl}/${id}`;\n\n    return this.http.delete<User>(url, httpOptions).pipe(\n      retry(3),\n      tap(_ => this.log(`deleted user id=${id}`)),\n      catchError(this.handleError<User>('deleteUser'))\n    );\n  }\n\n  /** GET users whose name contains search term */\n  searchUsers(term: string): Observable<User[]> {\n    if (!term.trim()) {\n      // if not search term, return empty user array\n      return of([]);\n    }\n    return this.http.get<User[]>(`${this.serviceUrl}/?name=${term}`)\n      .pipe(\n        retry(3),\n        // tap(_ => this.log(`found users matching \"${term}\"`)),\n        catchError(this.handleError<User[]>('searchUsers', []))\n      );\n  }\n\n  /**\n   * Handle Http operation that failed.\n   * Let the app continue.\n   * @param operation - name of the operation that failed\n   * @param result - optional value to return as the observable result\n   */\n  private handleError<T>(operation = 'operation', result?: T) {\n    return (error: any): Observable<T> => {\n\n      // TODO: send the error to remote logging infrastructure\n      console.error(error); // log to console instead\n\n      // TODO: better job of transforming error for user consumption\n      this.log(`${operation} failed: ${error.message}`);\n\n      // Let the app keep running by returning an empty result.\n      return of(result as T);\n    };\n  }\n\n  // Log a UserService message with the MessageService\n  private log(message: string) {\n    this.messageService.add(`UserService: ${message}`);\n  }\n}\n","\nexport class User {\n    constructor(\n        public userid: number = 0,\n        public username: string = \"\",\n        public userrole: string = \"\",\n        public fullname: string = \"\",\n        public organization: string = \"\",\n        public email: string = \"\") { }\n}\n","import { NgModule } from '@angular/core';\nimport { RouterModule, Routes, Router } from '@angular/router';\n\nimport { UserListComponent } from './user-list/user-list.component';\nimport { UserDetailComponent } from './user-detail/user-detail.component';\n\nconst usersRoutes: Routes = [\n    { path: 'users', component: UserListComponent },\n    { path: 'users/detail/:id', component: UserDetailComponent },\n];\n\n@NgModule({\n    imports: [\n        RouterModule.forChild(usersRoutes)\n    ],\n    exports: [\n        RouterModule\n    ]\n})\nexport class UsersRoutingModule { }\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build ---prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * In development mode, to ignore zone related error stack frames such as\n * `zone.run`, `zoneDelegate.invokeTask` for easier debugging, you can\n * import the following file, but please comment it out in production mode\n * because it will have performance impact when throw error\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.log(err));\n"],"sourceRoot":""}